/*
 * Copyright (C) 2017 Matthias Heizmann (heizmann@informatik.uni-freiburg.de)
 * Copyright (C) 2017 University of Freiburg
 *
 * This file is part of the ULTIMATE ModelCheckerUtilsTest Library.
 *
 * The ULTIMATE ModelCheckerUtilsTest Library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The ULTIMATE ModelCheckerUtilsTest Library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with the ULTIMATE ModelCheckerUtilsTest Library. If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional permission under GNU GPL version 3 section 7:
 * If you modify the ULTIMATE ModelCheckerUtilsTest Library, or any covered work, by linking
 * or combining it with Eclipse RCP (or a modified version of Eclipse RCP),
 * containing parts covered by the terms of the Eclipse Public License, the
 * licensors of the ULTIMATE ModelCheckerUtilsTest Library grant you additional permission
 * to convey the resulting work.
 */
package de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt;

import java.io.IOException;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import de.uni_freiburg.informatik.ultimate.core.model.services.ILogger;
import de.uni_freiburg.informatik.ultimate.core.model.services.ILogger.LogLevel;
import de.uni_freiburg.informatik.ultimate.core.model.services.IUltimateServiceProvider;
import de.uni_freiburg.informatik.ultimate.lib.modelcheckerutils.smt.scripttransfer.HistoryRecordingScript;
import de.uni_freiburg.informatik.ultimate.lib.smtlibutils.ManagedScript;
import de.uni_freiburg.informatik.ultimate.lib.smtlibutils.SmtSortUtils;
import de.uni_freiburg.informatik.ultimate.logic.FormulaUnLet;
import de.uni_freiburg.informatik.ultimate.logic.LoggingScript;
import de.uni_freiburg.informatik.ultimate.logic.Logics;
import de.uni_freiburg.informatik.ultimate.logic.Script;
import de.uni_freiburg.informatik.ultimate.logic.Sort;
import de.uni_freiburg.informatik.ultimate.logic.Term;
import de.uni_freiburg.informatik.ultimate.smtsolver.external.TermParseUtils;
import de.uni_freiburg.informatik.ultimate.test.mocks.UltimateMocks;

/**
 *
 * @author Matthias Heizmann (heizmann@informatik.uni-freiburg.de)
 *
 */
public class MuensterbergBenchmark {

	/**
	 * Warning: each test will overwrite the SMT script of the preceding test.
	 */
	private static final boolean WRITE_SMT_SCRIPTS_TO_FILE = false;
	private static final boolean WRITE_BENCHMARK_RESULTS_TO_WORKING_DIRECTORY = false;
	private static final long TEST_TIMEOUT_MILLISECONDS = 10_000;
	private static final LogLevel LOG_LEVEL = LogLevel.INFO;
	private static final String SOLVER_COMMAND = "z3 SMTLIB2_COMPLIANT=true -t:1000 -memory:2024 -smt2 -in";

	private IUltimateServiceProvider mServices;
	private Script mScript;
	private ManagedScript mMgdScript;
	private ILogger mLogger;
	private static QuantifierEliminationTestCsvWriter mCsvWriter;

	@BeforeClass
	public static void beforeAllTests() {
		mCsvWriter = new QuantifierEliminationTestCsvWriter(MuensterbergBenchmark.class.getSimpleName());
	}

	@AfterClass
	public static void afterAllTests() {
		if (WRITE_BENCHMARK_RESULTS_TO_WORKING_DIRECTORY) {
			try {
				mCsvWriter.writeCsv();
			} catch (final IOException e) {
				throw new AssertionError(e);
			}
		}
	}

	@Before
	public void setUp() throws IOException {
		mServices = UltimateMocks.createUltimateServiceProviderMock(LOG_LEVEL);
		mServices.getProgressMonitorService().setDeadline(System.currentTimeMillis() + TEST_TIMEOUT_MILLISECONDS);
		mLogger = mServices.getLoggingService().getLogger("lol");

		final Script solverInstance = new HistoryRecordingScript(UltimateMocks.createSolver(SOLVER_COMMAND, LOG_LEVEL));
		if (WRITE_SMT_SCRIPTS_TO_FILE) {
			mScript = new LoggingScript(solverInstance, "QuantifierEliminationTest.smt2", true);
		} else {
			mScript = solverInstance;
		}

		mMgdScript = new ManagedScript(mServices, mScript);
		mScript.setLogic(Logics.ALL);
	}

	@After
	public void tearDown() {
		mScript.exit();
		mCsvWriter.reportTestFinished();
	}

	/**
	 * Old quantifier elimination needs seconds, new quantifier elimination needs minutes and produces more than 500
	 * conjuncts
	 */
	@Test
	public void rajdeepIteration5wp() {

		final Sort bv8 = SmtSortUtils.getBitvectorSort(mScript, 8);
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort array = SmtSortUtils.getArraySort(mScript, bv32, bv8);

		mScript.declareFun("ULTIMATE.start_design_~nack.base", new Sort[0], bv32);
		mScript.declareFun("ULTIMATE.start_design_~nack.offset", new Sort[0], bv32);
		mScript.declareFun("ULTIMATE.start_design_~alloc_addr.base", new Sort[0], bv32);
		mScript.declareFun("ULTIMATE.start_main_~#nack~7.base", new Sort[0], bv32);
		mScript.declareFun("ULTIMATE.start_main_~#nack~7.offset", new Sort[0], bv32);

		mScript.declareFun("~smain.count", new Sort[0], bv8);
		mScript.declareFun("~smain.busy", new Sort[0], array);

		final String formulaAsString =
				"(forall ((|#memory_INTTYPE1| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 8)))) (v_bitvector_28 (_ BitVec 32)) (v_bitvector_27 (_ BitVec 32)) (~smain.free_addr (_ BitVec 8)) (v_bitvector_20 (_ BitVec 8)) (~smain.alloc (_ BitVec 8)) (v_bitvector_32 (_ BitVec 32)) (v_bitvector_31 (_ BitVec 32)) (v_bitvector_30 (_ BitVec 32)) (v_bitvector_29 (_ BitVec 32)) (v_bitvector_36 (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 8)))) (ULTIMATE.start_design_~alloc_addr.offset (_ BitVec 32)) (|ULTIMATE.start_design_#t~ite18| (_ BitVec 32)) (v_bitvector_24 (_ BitVec 8)) (v_bitvector_19 (_ BitVec 8)) (v_bitvector_35 (_ BitVec 8)) (v_bitvector_25 (_ BitVec 32)) (v_bitvector_26 (_ BitVec 32)) (v_bitvector_33 (_ BitVec 32)) (v_bitvector_34 (_ BitVec 32))) (and (or (= (_ bv0 32) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) ~smain.alloc) (_ bv0 32))) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv15 32))) (= (select (select (store (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv1 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv1 8))) ULTIMATE.start_design_~alloc_addr.base) v_bitvector_28 ((_ extract 7 0) v_bitvector_27))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8)) (= (_ bv0 32) (bvand (bvashr ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) ~smain.alloc) (_ bv0 32))) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv4 32)) (_ bv1 32))) (= (select (select (store (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base) v_bitvector_28 ((_ extract 7 0) v_bitvector_27))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8))) (or (= (_ bv0 32) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) ~smain.alloc) (_ bv0 32))) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv15 32))) (= (_ bv0 32) (bvand (bvashr ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) ~smain.alloc) (_ bv0 32))) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv4 32)) (_ bv1 32))) (= (select (select (store (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base) v_bitvector_32 ((_ extract 7 0) v_bitvector_31))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8)) (= (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv16 32))) (or (= (_ bv0 32) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv0 32)) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv15 32))) (= (_ bv0 32) (bvand (bvashr ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv0 32)) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv4 32)) (_ bv1 32))) (= (select (select (store (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base) v_bitvector_30 ((_ extract 7 0) v_bitvector_29))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8))) (or (not (= (select (select (store (store v_bitvector_36 ULTIMATE.start_design_~nack.base (store (select v_bitvector_36 ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store v_bitvector_36 ULTIMATE.start_design_~nack.base (store (select v_bitvector_36 ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base) ULTIMATE.start_design_~alloc_addr.offset ((_ extract 7 0) |ULTIMATE.start_design_#t~ite18|))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8))) (= (bvand (bvashr ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) v_bitvector_35) (_ bv1 32))) ((_ zero_extend 24) (bvand v_bitvector_19 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_bitvector_24) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv4 32)) (_ bv1 32)) (_ bv0 32)) (= (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) v_bitvector_35) (_ bv1 32))) ((_ zero_extend 24) (bvand v_bitvector_19 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_bitvector_24) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv15 32)) (_ bv0 32)) (= (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv16 32))) (or (not (= (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv16 32))) (= (_ bv0 32) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) ~smain.alloc) (_ bv0 32))) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv15 32))) (= (_ bv0 32) (bvand (bvashr ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) ~smain.alloc) (_ bv0 32))) ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv4 32)) (_ bv1 32))) (= (_ bv0 8) ~smain.alloc) (= (select (select (store (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv1 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base (store (select |#memory_INTTYPE1| ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv1 8))) ULTIMATE.start_design_~alloc_addr.base) v_bitvector_25 ((_ extract 7 0) v_bitvector_26))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8))) (or (not (= (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv16 32))) (not (= (select (select (store (store v_bitvector_36 ULTIMATE.start_design_~nack.base (store (select v_bitvector_36 ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv1 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store v_bitvector_36 ULTIMATE.start_design_~nack.base (store (select v_bitvector_36 ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv1 8))) ULTIMATE.start_design_~alloc_addr.base) v_bitvector_33 ((_ extract 7 0) v_bitvector_34))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8))) (= (bvand (bvashr ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) v_bitvector_35) (_ bv1 32))) ((_ zero_extend 24) (bvand v_bitvector_19 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_bitvector_24) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv4 32)) (_ bv1 32)) (_ bv0 32)) (= (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) v_bitvector_35) (_ bv1 32))) ((_ zero_extend 24) (bvand v_bitvector_19 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_bitvector_24) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv15 32)) (_ bv0 32)) (= (_ bv0 8) v_bitvector_35)) (or (not (= (select (select (store (store v_bitvector_36 ULTIMATE.start_design_~nack.base (store (select v_bitvector_36 ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base (store (select (store v_bitvector_36 ULTIMATE.start_design_~nack.base (store (select v_bitvector_36 ULTIMATE.start_design_~nack.base) ULTIMATE.start_design_~nack.offset (_ bv0 8))) ULTIMATE.start_design_~alloc_addr.base) ULTIMATE.start_design_~alloc_addr.offset ((_ extract 7 0) |ULTIMATE.start_design_#t~ite18|))) |ULTIMATE.start_main_~#nack~7.base|) |ULTIMATE.start_main_~#nack~7.offset|) (_ bv0 8))) (= (bvand (bvashr ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv0 32)) ((_ zero_extend 24) (bvand v_bitvector_19 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_bitvector_24) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv4 32)) (_ bv1 32)) (_ bv0 32)) (= (_ bv0 32) (bvand ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvsub (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (_ bv0 32)) ((_ zero_extend 24) (bvand v_bitvector_19 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_bitvector_24) (_ bv15 32)))))))) (_ bv31 32)))) (_ bv15 32))))))";
		final String expectedResultAsString =
				"(let ((.cse14 (= ULTIMATE.start_design_~alloc_addr.base |ULTIMATE.start_main_~#nack~7.base|))) (let ((.cse4 (not .cse14)) (.cse1 (= ULTIMATE.start_design_~nack.offset |ULTIMATE.start_main_~#nack~7.offset|)) (.cse2 (= ULTIMATE.start_design_~nack.base |ULTIMATE.start_main_~#nack~7.base|))) (let ((.cse7 (= (_ bv16 32) (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)))) (.cse8 (and .cse4 .cse1 .cse2))) (let ((.cse3 (or .cse14 .cse8)) (.cse10 (not .cse7))) (and (or (forall ((v_prenex_9 (_ BitVec 8)) (v_prenex_8 (_ BitVec 8))) (let ((.cse0 ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvadd (bvneg ((_ zero_extend 24) (bvand v_prenex_8 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_prenex_9) (_ bv15 32)))))))) (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32))) (_ bv31 32)))))) (or (= (_ bv0 32) (bvand (bvashr .cse0 (_ bv4 32)) (_ bv1 32))) (= (bvand .cse0 (_ bv15 32)) (_ bv0 32))))) (and (or (and .cse1 .cse2) (forall ((v_bitvector_28 (_ BitVec 32))) (= |ULTIMATE.start_main_~#nack~7.offset| v_bitvector_28))) .cse3 .cse4)) (forall ((v_prenex_17 (_ BitVec 8)) (v_prenex_18 (_ BitVec 8))) (let ((.cse5 ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvneg ((_ zero_extend 24) (bvand v_prenex_18 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_prenex_17) (_ bv15 32))))))))) (_ bv31 32)))))) (or (= (_ bv0 32) (bvand .cse5 (_ bv15 32))) (= (bvand (bvashr .cse5 (_ bv4 32)) (_ bv1 32)) (_ bv0 32))))) (or (and .cse3 .cse4 .cse1 .cse2) (forall ((v_prenex_6 (_ BitVec 8)) (v_prenex_5 (_ BitVec 8))) (let ((.cse6 ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvadd (bvneg ((_ zero_extend 24) (bvand v_prenex_5 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_prenex_6) (_ bv15 32)))))))) (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32))) (_ bv31 32)))))) (or (= (_ bv0 32) (bvand (bvashr .cse6 (_ bv4 32)) (_ bv1 32))) (= (bvand .cse6 (_ bv15 32)) (_ bv0 32))))) .cse7) (or .cse8 (forall ((v_bitvector_20 (_ BitVec 8)) (~smain.free_addr (_ BitVec 8))) (let ((.cse9 ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvadd (bvneg ((_ zero_extend 24) (bvand v_bitvector_20 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) ~smain.free_addr) (_ bv15 32)))))))) (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32))) (_ bv31 32)))))) (or (= (_ bv0 32) (bvand (bvashr .cse9 (_ bv4 32)) (_ bv1 32))) (= (bvand .cse9 (_ bv15 32)) (_ bv0 32)))))) (or .cse8 .cse10 (forall ((v_bitvector_19 (_ BitVec 8)) (v_bitvector_24 (_ BitVec 8)) (v_bitvector_35 (_ BitVec 8))) (let ((.cse11 ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) v_bitvector_35) (_ bv1 32)) (bvneg ((_ zero_extend 24) (bvand v_bitvector_19 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_bitvector_24) (_ bv15 32))))))))) (_ bv31 32)))))) (or (= (bvand .cse11 (_ bv15 32)) (_ bv0 32)) (= (_ bv0 8) v_bitvector_35) (= (bvand (bvashr .cse11 (_ bv4 32)) (_ bv1 32)) (_ bv0 32)))))) (or (forall ((v_prenex_11 (_ BitVec 8)) (v_prenex_12 (_ BitVec 8))) (let ((.cse12 ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvadd (bvneg ((_ zero_extend 24) (bvand v_prenex_12 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_prenex_11) (_ bv15 32)))))))) (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32))) (_ bv31 32)))))) (or (= (_ bv0 32) (bvand (bvashr .cse12 (_ bv4 32)) (_ bv1 32))) (= (bvand .cse12 (_ bv15 32)) (_ bv0 32))))) .cse10) (or (forall ((v_prenex_4 (_ BitVec 8)) (v_prenex_3 (_ BitVec 8)) (v_prenex_1 (_ BitVec 8))) (let ((.cse13 ((_ zero_extend 24) ((_ extract 7 0) (bvand (bvadd (bvand ((_ zero_extend 24) ~smain.count) (_ bv31 32)) (bvand ((_ zero_extend 24) v_prenex_4) (_ bv1 32)) (bvneg ((_ zero_extend 24) (bvand v_prenex_1 (select ~smain.busy ((_ zero_extend 24) ((_ extract 7 0) (bvand ((_ zero_extend 24) v_prenex_3) (_ bv15 32))))))))) (_ bv31 32)))))) (or (= (bvand (bvashr .cse13 (_ bv4 32)) (_ bv1 32)) (_ bv0 32)) (= (bvand .cse13 (_ bv15 32)) (_ bv0 32))))) .cse7))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, expectedResultAsString, true, mServices,
				mLogger, mMgdScript, mCsvWriter);
	}

	/**
	 * Old quantifier elimination produces smaller result (approx factor 2)
	 */
	@Test
	public void Memsafety20020406_1_false_valid_memtrack() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		final Sort intintArraySort = SmtSortUtils.getArraySort(mScript, intSort, intSort);
		final Sort intintintArraySort =
				SmtSortUtils.getArraySort(mScript, intSort, SmtSortUtils.getArraySort(mScript, intSort, intSort));

		mScript.declareFun("#memory_$Pointer$.base", new Sort[0], intintintArraySort);
		mScript.declareFun("#valid", new Sort[0], intintArraySort);
		mScript.declareFun("DUPFFnew_~ans~6.base", new Sort[0], intSort);
		mScript.declareFun("DUPFFnew_~ans~6.offset", new Sort[0], intSort);

		final String formulaAsString =
				"(forall ((|v_#memory_$Pointer$.base_279| (Array Int (Array Int Int)))) (or (= (select |#valid| (select (select |v_#memory_$Pointer$.base_279| DUPFFnew_~ans~6.base) (+ DUPFFnew_~ans~6.offset 8))) 1) (not (= (store |#memory_$Pointer$.base| DUPFFnew_~ans~6.base (store (select |#memory_$Pointer$.base| DUPFFnew_~ans~6.base) (+ DUPFFnew_~ans~6.offset 4) (select (select |v_#memory_$Pointer$.base_279| DUPFFnew_~ans~6.base) (+ DUPFFnew_~ans~6.offset 4)))) |v_#memory_$Pointer$.base_279|))))";
		final String expectedResultAsString =
				"(forall ((v_DerPreprocessor_1 Int)) (= 1 (select |#valid| (select (store (select |#memory_$Pointer$.base| DUPFFnew_~ans~6.base) (+ DUPFFnew_~ans~6.offset 4) v_DerPreprocessor_1) (+ DUPFFnew_~ans~6.offset 8)))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, expectedResultAsString, false,
				mServices, mLogger, mMgdScript, mCsvWriter);
	}

	/**
	 * Old PQE size 43, new PQE size 96
	 */
	@Test
	public void memsafet_test_0232_false_valid_free_ias() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		final Sort intintintArraySort =
				SmtSortUtils.getArraySort(mScript, intSort, SmtSortUtils.getArraySort(mScript, intSort, intSort));
		mScript.declareFun("ULTIMATE.start_append_~item~4.offset", new Sort[0], intSort);
		mScript.declareFun("ULTIMATE.start_append_~plist.offset", new Sort[0], intSort);
		mScript.declareFun("ULTIMATE.start_append_~plist.base", new Sort[0], intSort);
		mScript.declareFun("ULTIMATE.start_main_~#list~5.base", new Sort[0], intSort);
		mScript.declareFun("#memory_$Pointer$.offset", new Sort[0], intintintArraySort);
		mScript.declareFun("ULTIMATE.start_main_~#list~5.offset", new Sort[0], intSort);
		mScript.declareFun("ULTIMATE.start_append_~item~4.base", new Sort[0], intSort);

		final String formulaAsString =
				"(forall ((|#memory_$Pointer$.base| (Array Int (Array Int Int)))) (= (select (select (store |#memory_$Pointer$.offset| ULTIMATE.start_append_~plist.base (store (select |#memory_$Pointer$.offset| ULTIMATE.start_append_~plist.base) ULTIMATE.start_append_~plist.offset ULTIMATE.start_append_~item~4.offset)) (select (select (store |#memory_$Pointer$.base| ULTIMATE.start_append_~plist.base (store (select |#memory_$Pointer$.base| ULTIMATE.start_append_~plist.base) ULTIMATE.start_append_~plist.offset ULTIMATE.start_append_~item~4.base)) |ULTIMATE.start_main_~#list~5.base|) |ULTIMATE.start_main_~#list~5.offset|)) (+ (select (select (store |#memory_$Pointer$.offset| ULTIMATE.start_append_~plist.base (store (select |#memory_$Pointer$.offset| ULTIMATE.start_append_~plist.base) ULTIMATE.start_append_~plist.offset ULTIMATE.start_append_~item~4.offset)) |ULTIMATE.start_main_~#list~5.base|) |ULTIMATE.start_main_~#list~5.offset|) 4)) 0))";

		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Too many recursive steps in new PQE
	 */
	@Test
	public void dll_queue_false_unreach_call_false_valid_memcleanup() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		mScript.declareFun("main_#t~malloc5.offset", new Sort[0], intSort);
		mScript.declareFun("main_~item~5.base", new Sort[0], intSort);
		mScript.declareFun("main_~head~5.base", new Sort[0], intSort);
		mScript.declareFun("main_~item~5.offset", new Sort[0], intSort);
		mScript.declareFun("main_~head~5.offset", new Sort[0], intSort);
		mScript.declareFun("main_#t~malloc5.base", new Sort[0], intSort);
		final String formulaAsString =
				"(forall ((v_prenex_8 (Array Int (Array Int Int))) (v_prenex_6 Int) (v_prenex_7 (Array Int (Array Int Int))) (v_DerPreprocessor_4 Int) (|#memory_$Pointer$.offset| (Array Int (Array Int Int))) (|main_#t~mem7.offset| Int) (|#memory_$Pointer$.base| (Array Int (Array Int Int))) (v_DerPreprocessor_6 Int)) (and (= (select (select (store (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base| (store (select (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base|) (+ v_prenex_6 4) main_~item~5.base)) main_~item~5.base) main_~item~5.offset) (select (select (store (store (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base| (store (select (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base|) (+ v_prenex_6 4) main_~item~5.base)) (select (select (store (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base| (store (select (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base|) (+ v_prenex_6 4) main_~item~5.base)) main_~item~5.base) main_~item~5.offset) (store (store (select (store (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base| (store (select (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base|) (+ v_prenex_6 4) main_~item~5.base)) (select (select (store (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base| (store (select (store v_prenex_7 main_~item~5.base (store (select v_prenex_7 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base|) (+ v_prenex_6 4) main_~item~5.base)) main_~item~5.base) main_~item~5.offset)) (select (select (store (store v_prenex_8 main_~item~5.base (store (select v_prenex_8 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base| (store (select (store v_prenex_8 main_~item~5.base (store (select v_prenex_8 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base|) (+ v_prenex_6 4) main_~item~5.offset)) main_~item~5.base) main_~item~5.offset) 0) (+ (select (select (store (store v_prenex_8 main_~item~5.base (store (select v_prenex_8 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base| (store (select (store v_prenex_8 main_~item~5.base (store (select v_prenex_8 main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base|) (+ v_prenex_6 4) main_~item~5.offset)) main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_4)) main_~head~5.base) main_~head~5.offset)) (= (select (select (store (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base| (store (select (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base|) (+ |main_#t~mem7.offset| 4) main_~item~5.offset)) main_~item~5.base) main_~item~5.offset) (select (select (store (store (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base| (store (select (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base|) (+ |main_#t~mem7.offset| 4) main_~item~5.offset)) (select (select (store (store |#memory_$Pointer$.base| main_~item~5.base (store (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base| (store (select (store |#memory_$Pointer$.base| main_~item~5.base (store (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base|) (+ |main_#t~mem7.offset| 4) main_~item~5.base)) main_~item~5.base) main_~item~5.offset) (store (store (select (store (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base| (store (select (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base|) (+ |main_#t~mem7.offset| 4) main_~item~5.offset)) (select (select (store (store |#memory_$Pointer$.base| main_~item~5.base (store (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base| (store (select (store |#memory_$Pointer$.base| main_~item~5.base (store (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.base|)) |main_#t~malloc5.base|) (+ |main_#t~mem7.offset| 4) main_~item~5.base)) main_~item~5.base) main_~item~5.offset)) (select (select (store (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base| (store (select (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base|) (+ |main_#t~mem7.offset| 4) main_~item~5.offset)) main_~item~5.base) main_~item~5.offset) 0) (+ (select (select (store (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base| (store (select (store |#memory_$Pointer$.offset| main_~item~5.base (store (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset |main_#t~malloc5.offset|)) |main_#t~malloc5.base|) (+ |main_#t~mem7.offset| 4) main_~item~5.offset)) main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_6)) main_~head~5.base) main_~head~5.offset))))";

		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, true, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Too many recursive steps in new PQE
	 */
	@Test
	public void dll_queue_false_unreach_call_false_valid_memcleanup_2() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		final Sort intintintArraySort =
				SmtSortUtils.getArraySort(mScript, intSort, SmtSortUtils.getArraySort(mScript, intSort, intSort));
		mScript.declareFun("main_~item~5.offset", new Sort[0], intSort);
		mScript.declareFun("main_~head~5.offset", new Sort[0], intSort);
		mScript.declareFun("#memory_$Pointer$.base", new Sort[0], intintintArraySort);
		mScript.declareFun("main_~item~5.base", new Sort[0], intSort);
		mScript.declareFun("main_~head~5.base", new Sort[0], intSort);
		final String formulaAsString =
				"(forall ((|#memory_$Pointer$.offset| (Array Int (Array Int Int))) (v_DerPreprocessor_28 Int) (v_DerPreprocessor_22 Int) (v_prenex_65 (Array Int (Array Int Int))) (v_DerPreprocessor_24 Int) (v_DerPreprocessor_26 Int)) (and (= 0 (select (select (store |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset) (store (store (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset)) (select (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset) 0) (+ (select (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_22)) (select (select (store |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset) (store (store (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset)) (select (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset) 0) (+ (select (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_28)) main_~head~5.base) main_~head~5.offset)) (select (select (store |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset) (store (store (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset)) (select (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset) 0) (+ (select (select |#memory_$Pointer$.offset| main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_22)) main_~head~5.base) main_~head~5.offset))) (= 0 (select (select (store |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset) (store (store (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset)) (select (select v_prenex_65 main_~item~5.base) main_~item~5.offset) 0) (+ (select (select v_prenex_65 main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_24)) (select (select (store |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset) (store (store (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset)) (select (select v_prenex_65 main_~item~5.base) main_~item~5.offset) 0) (+ (select (select v_prenex_65 main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_24)) main_~head~5.base) main_~head~5.offset)) (select (select (store v_prenex_65 (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset) (store (store (select v_prenex_65 (select (select |#memory_$Pointer$.base| main_~item~5.base) main_~item~5.offset)) (select (select v_prenex_65 main_~item~5.base) main_~item~5.offset) 0) (+ (select (select v_prenex_65 main_~item~5.base) main_~item~5.offset) 8) v_DerPreprocessor_26)) main_~head~5.base) main_~head~5.offset)))))";

		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, true, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * 30s elimination time
	 */
	@Test
	public void forester_heap_dll_optional() {
		final Sort bv1 = SmtSortUtils.getBitvectorSort(mScript, 1);
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort array = SmtSortUtils.getArraySort(mScript, bv32, bv1);
		mScript.declareFun("main_~head~0.offset", new Sort[0], bv32);
		mScript.declareFun("main_~head~0.base", new Sort[0], bv32);
		mScript.declareFun("#valid", new Sort[0], array);
		final String formulaAsString =
				"(forall ((|#memory_INTTYPE4| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (v_DerPreprocessor_10 (_ BitVec 32)) (v_DerPreprocessor_9 (_ BitVec 32)) (|v_main_#t~malloc6.base_4| (_ BitVec 32)) (|main_#t~mem7.offset| (_ BitVec 32)) (v_DerPreprocessor_8 (_ BitVec 32)) (v_subst_6 (_ BitVec 32)) (v_DerPreprocessor_7 (_ BitVec 32)) (v_DerPreprocessor_6 (_ BitVec 32))) (or (not (= (select |#valid| |v_main_#t~malloc6.base_4|) (_ bv0 1))) (not (= (select (select (store (store |#memory_INTTYPE4| main_~head~0.base (store (store (store (select |#memory_INTTYPE4| main_~head~0.base) (bvadd main_~head~0.offset (_ bv12 32)) (_ bv0 32)) (bvadd main_~head~0.offset (_ bv8 32)) v_DerPreprocessor_10) main_~head~0.offset v_DerPreprocessor_9)) |v_main_#t~malloc6.base_4| (store (store (store (store (select (store |#memory_INTTYPE4| main_~head~0.base (store (store (store (select |#memory_INTTYPE4| main_~head~0.base) (bvadd main_~head~0.offset (_ bv12 32)) (_ bv0 32)) (bvadd main_~head~0.offset (_ bv8 32)) v_DerPreprocessor_10) main_~head~0.offset v_DerPreprocessor_9)) |v_main_#t~malloc6.base_4|) (bvadd |main_#t~mem7.offset| (_ bv4 32)) v_DerPreprocessor_8) v_subst_6 v_DerPreprocessor_7) (bvadd v_subst_6 (_ bv12 32)) (_ bv0 32)) (bvadd v_subst_6 (_ bv8 32)) v_DerPreprocessor_6)) main_~head~0.base) (bvadd main_~head~0.offset (_ bv12 32))) (_ bv2 32)))))";
		final String expectedResultAsString =
				"(forall ((v_subst_6 (_ BitVec 32)) (v_DerPreprocessor_8 (_ BitVec 32)) (|main_#t~mem7.offset| (_ BitVec 32)) (v_DerPreprocessor_7 (_ BitVec 32)) (|v_main_#t~malloc6.base_4| (_ BitVec 32)) (v_DerPreprocessor_6 (_ BitVec 32))) (or (not (= (select |#valid| |v_main_#t~malloc6.base_4|) (_ bv0 1))) (not (and (or (and (not (= (bvadd main_~head~0.offset (_ bv12 32)) (bvadd v_subst_6 (_ bv8 32)))) (= main_~head~0.base |v_main_#t~malloc6.base_4|) (or (and (= (bvadd main_~head~0.offset (_ bv12 32)) v_subst_6) (= (_ bv2 32) v_DerPreprocessor_7)) (and (not (= (bvadd main_~head~0.offset (_ bv12 32)) v_subst_6)) (= (_ bv2 32) v_DerPreprocessor_8) (= (bvadd main_~head~0.offset (_ bv12 32)) (bvadd |main_#t~mem7.offset| (_ bv4 32)))))) (and (= (bvadd main_~head~0.offset (_ bv12 32)) (bvadd v_subst_6 (_ bv8 32))) (= (_ bv2 32) v_DerPreprocessor_6) (= main_~head~0.base |v_main_#t~malloc6.base_4|))) (not (= (bvadd v_subst_6 (_ bv12 32)) (bvadd main_~head~0.offset (_ bv12 32))))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, expectedResultAsString, false,
				mServices, mLogger, mMgdScript, mCsvWriter);
	}

	@Test
	public void forester_heap_dll_01() {
		final Sort bv1 = SmtSortUtils.getBitvectorSort(mScript, 1);
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort array = SmtSortUtils.getArraySort(mScript, bv32, bv1);
		mScript.declareFun("main_#t~malloc9.base", new Sort[0], bv32);
		mScript.declareFun("main_~end~0.offset", new Sort[0], bv32);
		mScript.declareFun("main_~list~0.base", new Sort[0], bv32);
		mScript.declareFun("main_~end~0.base", new Sort[0], bv32);
		mScript.declareFun("main_~list~0.offset", new Sort[0], bv32);
		mScript.declareFun("#valid", new Sort[0], array);
		final String formulaAsString =
				"(forall ((|#memory_$Pointer$.base| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|main_#t~mem10.offset| (_ BitVec 32)) (v_subst_7 (_ BitVec 32))) (= (_ bv0 1) (bvadd (select |#valid| (select (select (store (store (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base| (store (select (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base|) (bvadd |main_#t~mem10.offset| (_ bv4 32)) main_~end~0.base)) (select (select (store (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base| (store (select (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base|) (bvadd |main_#t~mem10.offset| (_ bv4 32)) main_~end~0.base)) main_~end~0.base) main_~end~0.offset) (store (store (select (store (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base| (store (select (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base|) (bvadd |main_#t~mem10.offset| (_ bv4 32)) main_~end~0.base)) (select (select (store (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base| (store (select (store |#memory_$Pointer$.base| main_~end~0.base (store (select |#memory_$Pointer$.base| main_~end~0.base) main_~end~0.offset |main_#t~malloc9.base|)) |main_#t~malloc9.base|) (bvadd |main_#t~mem10.offset| (_ bv4 32)) main_~end~0.base)) main_~end~0.base) main_~end~0.offset)) v_subst_7 (_ bv0 32)) (bvadd v_subst_7 (_ bv8 32)) (_ bv0 32))) main_~list~0.base) main_~list~0.offset)) (_ bv1 1))))";
		final String expectedResultAsString =
				"(forall ((|main_#t~mem10.offset| (_ BitVec 32)) (v_arrayElimCell_156 (_ BitVec 32)) (v_subst_7 (_ BitVec 32))) (or (and (= main_~list~0.offset v_subst_7) (= (_ bv0 1) (bvadd (select |#valid| (_ bv0 32)) (_ bv1 1))) (= |main_#t~malloc9.base| main_~list~0.base)) (and (or (not (= |main_#t~malloc9.base| main_~list~0.base)) (not (= main_~list~0.offset v_subst_7))) (or (and (or (not (= |main_#t~malloc9.base| main_~list~0.base)) (not (= main_~list~0.offset (bvadd v_subst_7 (_ bv8 32))))) (or (and (= main_~list~0.base main_~end~0.base) (= (_ bv0 1) (bvadd (select |#valid| |main_#t~malloc9.base|) (_ bv1 1))) (= main_~list~0.offset main_~end~0.offset)) (and (or (and (= main_~list~0.offset (bvadd |main_#t~mem10.offset| (_ bv4 32))) (= (_ bv0 1) (bvadd (select |#valid| main_~end~0.base) (_ bv1 1))) (= |main_#t~malloc9.base| main_~list~0.base)) (and (= (bvadd (select |#valid| v_arrayElimCell_156) (_ bv1 1)) (_ bv0 1)) (or (not (= |main_#t~malloc9.base| main_~list~0.base)) (not (= main_~list~0.offset (bvadd |main_#t~mem10.offset| (_ bv4 32))))))) (or (not (= main_~list~0.base main_~end~0.base)) (not (= main_~list~0.offset main_~end~0.offset)))))) (and (= main_~list~0.offset (bvadd v_subst_7 (_ bv8 32))) (= (_ bv0 1) (bvadd (select |#valid| (_ bv0 32)) (_ bv1 1))) (= |main_#t~malloc9.base| main_~list~0.base))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, expectedResultAsString, false,
				mServices, mLogger, mMgdScript, mCsvWriter);
	}

	@Test
	public void forester_heap_dll_simple_white_blue() {
		final Sort bv1 = SmtSortUtils.getBitvectorSort(mScript, 1);
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort array = SmtSortUtils.getArraySort(mScript, bv32, bv1);
		mScript.declareFun("main_~x~0.offset", new Sort[0], bv32);
		mScript.declareFun("main_~head~0.offset", new Sort[0], bv32);
		mScript.declareFun("main_~x~0.base", new Sort[0], bv32);
		mScript.declareFun("main_#t~malloc2.base", new Sort[0], bv32);
		mScript.declareFun("main_~head~0.base", new Sort[0], bv32);
		mScript.declareFun("#valid", new Sort[0], array);
		final String formulaAsString =
				"(forall ((|#memory_$Pointer$.base| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|main_#t~mem3.offset| (_ BitVec 32)) (v_subst_5 (_ BitVec 32)) (v_DerPreprocessor_1 (_ BitVec 32))) (= (_ bv1 1) (select |#valid| (select (select (store (store (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base| (store (select (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base|) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~x~0.base)) (select (select (store (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base| (store (select (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base|) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~x~0.base)) main_~x~0.base) main_~x~0.offset) (store (store (select (store (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base| (store (select (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base|) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~x~0.base)) (select (select (store (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base| (store (select (store |#memory_$Pointer$.base| main_~x~0.base (store (select |#memory_$Pointer$.base| main_~x~0.base) main_~x~0.offset |main_#t~malloc2.base|)) |main_#t~malloc2.base|) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~x~0.base)) main_~x~0.base) main_~x~0.offset)) (bvadd v_subst_5 (_ bv8 32)) v_DerPreprocessor_1) v_subst_5 (_ bv0 32))) main_~head~0.base) main_~head~0.offset))))";
		final String expectedResultAsString =
				"(forall ((|main_#t~mem3.offset| (_ BitVec 32)) (v_arrayElimCell_62 (_ BitVec 32)) (v_subst_5 (_ BitVec 32)) (v_DerPreprocessor_1 (_ BitVec 32))) (or (and (= (bvadd v_subst_5 (_ bv8 32)) main_~head~0.offset) (= |main_#t~malloc2.base| main_~head~0.base) (= (_ bv1 1) (select |#valid| v_DerPreprocessor_1))) (and (= (select |#valid| (_ bv0 32)) (_ bv1 1)) (= |main_#t~malloc2.base| main_~head~0.base) (= main_~head~0.offset v_subst_5)) (and (or (not (= |main_#t~malloc2.base| main_~head~0.base)) (not (= (bvadd v_subst_5 (_ bv8 32)) main_~head~0.offset))) (or (not (= main_~x~0.offset main_~head~0.offset)) (not (= main_~head~0.base main_~x~0.base))) (or (and (or (not (= main_~head~0.offset (bvadd |main_#t~mem3.offset| (_ bv4 32)))) (not (= |main_#t~malloc2.base| main_~head~0.base))) (= (select |#valid| v_arrayElimCell_62) (_ bv1 1))) (and (= (_ bv1 1) (select |#valid| main_~x~0.base)) (= |main_#t~malloc2.base| main_~head~0.base) (= main_~head~0.offset (bvadd |main_#t~mem3.offset| (_ bv4 32))))) (or (not (= |main_#t~malloc2.base| main_~head~0.base)) (not (= main_~head~0.offset v_subst_5)))) (and (or (not (= |main_#t~malloc2.base| main_~head~0.base)) (not (= (bvadd v_subst_5 (_ bv8 32)) main_~head~0.offset))) (= (_ bv1 1) (select |#valid| |main_#t~malloc2.base|)) (or (not (= |main_#t~malloc2.base| main_~head~0.base)) (not (= main_~head~0.offset v_subst_5))) (= main_~head~0.base main_~x~0.base) (= main_~x~0.offset main_~head~0.offset))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, expectedResultAsString, false,
				mServices, mLogger, mMgdScript, mCsvWriter);
	}

	@Test
	public void dllqueue01() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort bv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32);
		final Sort bv32Tobv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32Tobv32);

		mScript.declareFun("main_~item~0.base", new Sort[0], bv32);
		mScript.declareFun("#length", new Sort[0], bv32Tobv32);
		mScript.declareFun("main_~head~0.offset", new Sort[0], bv32);
		mScript.declareFun("main_~item~0.offset", new Sort[0], bv32);
		mScript.declareFun("main_#t~malloc2.offset", new Sort[0], bv32);
		mScript.declareFun("main_#t~malloc2.base", new Sort[0], bv32);
		mScript.declareFun("main_~head~0.base", new Sort[0], bv32);
		final String formulaAsString =
				"(forall ((|v_#memory_$Pointer$.base_64| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|v_#memory_$Pointer$.offset_61| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|#memory_$Pointer$.offset| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|#memory_$Pointer$.base| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32))))) (or (not (and (= |v_#memory_$Pointer$.base_64| (store |#memory_$Pointer$.base| main_~item~0.base (store (select |#memory_$Pointer$.base| main_~item~0.base) main_~item~0.offset |main_#t~malloc2.base|))) (= |v_#memory_$Pointer$.offset_61| (store |#memory_$Pointer$.offset| main_~item~0.base (store (select |#memory_$Pointer$.offset| main_~item~0.base) main_~item~0.offset |main_#t~malloc2.offset|))))) (and (forall ((v_prxprot_4 (_ BitVec 32)) (v_prxprot_1 (_ BitVec 32)) (v_DerPreprocessor_9 (_ BitVec 32))) (bvsle (bvadd (select (select (store (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset) (store (store (select (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset)) v_prxprot_1 (_ bv0 32)) (bvadd v_prxprot_1 (_ bv8 32)) v_DerPreprocessor_9)) main_~head~0.base) main_~head~0.offset) (_ bv8 32)) (bvadd (select (select (store (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset) (store (store (select (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_4 (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset)) v_prxprot_1 (_ bv0 32)) (bvadd v_prxprot_1 (_ bv8 32)) v_DerPreprocessor_9)) main_~head~0.base) main_~head~0.offset) (_ bv12 32)))) (forall ((|main_#t~mem3.offset| (_ BitVec 32)) (v_DerPreprocessor_5 (_ BitVec 32)) (v_DerPreprocessor_10 (_ BitVec 32)) (v_prxprot_2 (_ BitVec 32))) (bvsle (bvadd (select (select (store (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset) (store (store (select (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset)) v_prxprot_2 (_ bv0 32)) (bvadd v_prxprot_2 (_ bv8 32)) v_DerPreprocessor_10)) main_~head~0.base) main_~head~0.offset) (_ bv12 32)) (select |#length| (select (select (store (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.base)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset) (store (store (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.base)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd |main_#t~mem3.offset| (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset)) v_prxprot_2 (_ bv0 32)) (bvadd v_prxprot_2 (_ bv8 32)) v_DerPreprocessor_5)) main_~head~0.base) main_~head~0.offset)))) (forall ((v_subst_2 (_ BitVec 32)) (v_prxprot_3 (_ BitVec 32)) (v_DerPreprocessor_8 (_ BitVec 32))) (bvsle (_ bv0 32) (bvadd (select (select (store (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_3 (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_3 (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset) (store (store (select (store |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.offset_61| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_3 (_ bv4 32)) main_~item~0.offset)) (select (select (store |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset) (store (select |v_#memory_$Pointer$.base_64| (select (select |v_#memory_$Pointer$.base_64| main_~item~0.base) main_~item~0.offset)) (bvadd v_prxprot_3 (_ bv4 32)) main_~item~0.base)) main_~item~0.base) main_~item~0.offset)) v_subst_2 (_ bv0 32)) (bvadd v_subst_2 (_ bv8 32)) v_DerPreprocessor_8)) main_~head~0.base) main_~head~0.offset) (_ bv8 32)))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, true, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void list_ext_flag() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		final Sort intintintArraySort =
				SmtSortUtils.getArraySort(mScript, intSort, SmtSortUtils.getArraySort(mScript, intSort, intSort));
		mScript.declareFun("main_~a~0.base", new Sort[0], intSort);
		mScript.declareFun("main_~a~0.offset", new Sort[0], intSort);
		mScript.declareFun("#memory_$Pointer$.base", new Sort[0], intintintArraySort);
		mScript.declareFun("main_~p~0.base", new Sort[0], intSort);
		mScript.declareFun("#memory_$Pointer$.offset", new Sort[0], intintintArraySort);
		mScript.declareFun("main_~p~0.offset", new Sort[0], intSort);
		mScript.declareFun("#memory_int", new Sort[0], intintintArraySort);
		final String formulaAsString =
				"(exists ((|v_#memory_$Pointer$.base_65| (Array Int (Array Int Int))) (main_~t~0.base Int) (|v_#memory_int_109| (Array Int (Array Int Int))) (|v_#memory_$Pointer$.offset_57| (Array Int (Array Int Int))) (v_prenex_31 (Array Int (Array Int Int))) (v_prenex_29 (Array Int (Array Int Int))) (v_prenex_30 (Array Int (Array Int Int))) (v_prenex_28 Int)) (or (and (= (select (select |v_#memory_int_109| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8))) 0) 1) (= |#memory_$Pointer$.base| (store |v_#memory_$Pointer$.base_65| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8)) (store (select |v_#memory_$Pointer$.base_65| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8))) 8 main_~t~0.base))) (not (= main_~t~0.base main_~a~0.base)) (= (select (select |v_#memory_$Pointer$.offset_57| main_~a~0.base) (+ main_~a~0.offset 8)) 0) (= (select (select |#memory_$Pointer$.base| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8))) 8) main_~p~0.base) (not (= main_~a~0.base (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8)))) (= |#memory_int| (store |v_#memory_int_109| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8)) (store (select |v_#memory_int_109| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8))) 8 (select (select |#memory_int| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8))) 8)))) (not (= main_~t~0.base (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8)))) (= (store |v_#memory_$Pointer$.offset_57| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8)) (store (select |v_#memory_$Pointer$.offset_57| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8))) 8 0)) |#memory_$Pointer$.offset|) (= main_~a~0.offset 0) (= main_~p~0.offset (select (select |#memory_$Pointer$.offset| (select (select |v_#memory_$Pointer$.base_65| main_~a~0.base) (+ main_~a~0.offset 8))) 8)) (= (select (select |v_#memory_int_109| main_~a~0.base) 0) 1)) (and (= (select (select v_prenex_29 main_~a~0.base) (+ main_~a~0.offset 8)) 0) (= (store v_prenex_29 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8) (store (select v_prenex_29 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8)) 8 0)) |#memory_$Pointer$.offset|) (= (store v_prenex_30 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8) (store (select v_prenex_30 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8)) 8 (select (select |#memory_int| (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8)) 8))) |#memory_int|) (= main_~a~0.offset 0) (= (select (select v_prenex_30 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8)) 0) 1) (= |#memory_$Pointer$.base| (store v_prenex_31 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8) (store (select v_prenex_31 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8)) 8 v_prenex_28))) (not (= v_prenex_28 (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8))) (= (select (select v_prenex_29 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8) 0) (not (= v_prenex_28 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8)))) (= main_~p~0.offset (select (select |#memory_$Pointer$.offset| (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8)) 8)) (= (select (select |#memory_$Pointer$.base| (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8)) 8) main_~p~0.base) (= (select (select v_prenex_30 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 0) 1) (not (= (select (select v_prenex_31 (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8))) 8) (select (select v_prenex_31 main_~a~0.base) (+ main_~a~0.offset 8)))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void dll_01_2small() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		mScript.declareFun("main_#t~mem25.offset", new Sort[0], intSort);
		mScript.declareFun("main_#t~mem25.base", new Sort[0], intSort);
		final String formulaAsString =
				"(exists ((main_~end~0.base Int) (|#memory_$Pointer$.base| (Array Int (Array Int Int))) (|#memory_$Pointer$.offset| (Array Int (Array Int Int))) (main_~end~0.offset Int)) (and (= (select (select |#memory_$Pointer$.offset| main_~end~0.base) (+ main_~end~0.offset 16)) |main_#t~mem25.offset|) (exists ((main_~list~0.base Int)) (and (= (select (select |#memory_$Pointer$.offset| main_~list~0.base) 16) main_~end~0.offset) (= (select (select |#memory_$Pointer$.base| main_~list~0.base) 16) main_~end~0.base) (= (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| main_~list~0.base) 16)) (+ (select (select |#memory_$Pointer$.offset| main_~list~0.base) 16) 16)) 0) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~list~0.base) 16)) (+ (select (select |#memory_$Pointer$.offset| main_~list~0.base) 16) 16)) 0))) (= (select (select |#memory_$Pointer$.base| main_~end~0.base) (+ main_~end~0.offset 16)) |main_#t~mem25.base|)))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, true, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void dll_01_2big() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		mScript.declareFun("main_#t~mem20.offset", new Sort[0], intSort);
		mScript.declareFun("main_#t~mem20.base", new Sort[0], intSort);
		final String formulaAsString =
				"(exists ((main_~inner~0.offset Int) (|#memory_$Pointer$.base| (Array Int (Array Int Int))) (main_~inner~0.base Int) (|#memory_$Pointer$.offset| (Array Int (Array Int Int)))) (and (= (select (select |#memory_$Pointer$.offset| main_~inner~0.base) (+ main_~inner~0.offset 16)) |main_#t~mem20.offset|) (or (exists ((main_~end~0.base Int) (v_prenex_12 Int)) (and (not (= (select (select |#memory_$Pointer$.base| v_prenex_12) 16) v_prenex_12)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_12) 16)) 16)) (= 0 (select (select |#memory_$Pointer$.offset| v_prenex_12) 0)) (not (= (select (select |#memory_$Pointer$.base| main_~end~0.base) 16) v_prenex_12)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_12) 8)) 8)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_12) 8)) (- 8))) (= (select (select |#memory_$Pointer$.offset| main_~end~0.base) 16) main_~inner~0.offset) (not (= (select (select |#memory_$Pointer$.base| v_prenex_12) 8) main_~end~0.base)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_12) 16)) 0)) (= (select (select |#memory_$Pointer$.base| v_prenex_12) 8) (select (select |#memory_$Pointer$.base| main_~end~0.base) 0)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| main_~end~0.base) 16)) 0)) (not (= (select (select |#memory_$Pointer$.base| v_prenex_12) 16) 0)) (not (= (select (select |#memory_$Pointer$.base| v_prenex_12) 16) (select (select |#memory_$Pointer$.base| v_prenex_12) 8))) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| main_~end~0.base) 16)) 16)) (not (= (select (select |#memory_$Pointer$.base| main_~end~0.base) 16) (select (select |#memory_$Pointer$.base| v_prenex_12) 16))) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_12) 16)) 0)) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_12) 16)) 16) 0) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~end~0.base) 16)) 0)) (not (= (select (select |#memory_$Pointer$.base| main_~end~0.base) 16) (select (select |#memory_$Pointer$.base| v_prenex_12) 8))) (= 0 (select (select |#memory_$Pointer$.offset| main_~end~0.base) 0)) (= (select (select |#memory_$Pointer$.offset| v_prenex_12) 16) 0) (= (select (select |#memory_$Pointer$.offset| main_~end~0.base) 16) 0) (= (select (select |#memory_$Pointer$.base| main_~end~0.base) 16) main_~inner~0.base) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_12) 8)) (- 8)) v_prenex_12) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| main_~end~0.base) 16)) 16) 0) (= 0 (select (select |#memory_$Pointer$.base| v_prenex_12) 0)) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_12) 8)) 8)) (= (+ (select (select |#memory_$Pointer$.offset| v_prenex_12) 8) 8) 0))) (exists ((v_prenex_16 Int) (v_prenex_13 Int)) (and (= (select (select |#memory_$Pointer$.offset| v_prenex_13) 8) 8) (= 0 (select (select |#memory_$Pointer$.offset| v_prenex_13) 0)) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_13) 16)) 0)) (not (= (select (select |#memory_$Pointer$.base| v_prenex_16) 16) (select (select |#memory_$Pointer$.base| v_prenex_13) 8))) (not (= (select (select |#memory_$Pointer$.base| v_prenex_16) 16) v_prenex_13)) (not (= (select (select |#memory_$Pointer$.base| v_prenex_13) 16) 0)) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_13) 16)) 16) 0) (= (select (select |#memory_$Pointer$.base| v_prenex_16) 0) (select (select |#memory_$Pointer$.base| v_prenex_13) 8)) (not (= (select (select |#memory_$Pointer$.base| v_prenex_13) 16) (select (select |#memory_$Pointer$.base| v_prenex_13) 8))) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_16) 16)) 16)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_16) 16)) 0)) (not (= (select (select |#memory_$Pointer$.base| v_prenex_13) 16) v_prenex_13)) (= (select (select |#memory_$Pointer$.offset| v_prenex_13) 16) 0) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_16) 16)) 0)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_13) 8)) 24)) (= (select (select |#memory_$Pointer$.offset| v_prenex_16) 16) main_~inner~0.offset) (= 0 (select (select |#memory_$Pointer$.offset| v_prenex_16) 0)) (not (= (select (select |#memory_$Pointer$.base| v_prenex_16) 16) (select (select |#memory_$Pointer$.base| v_prenex_13) 16))) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_16) 16)) 16) 0) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_13) 16)) 0)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_13) 8)) 8)) (= 0 (select (select |#memory_$Pointer$.base| v_prenex_13) 0)) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_13) 8)) 24)) (not (= v_prenex_16 (select (select |#memory_$Pointer$.base| v_prenex_13) 8))) (= (select (select |#memory_$Pointer$.base| v_prenex_16) 16) main_~inner~0.base) (= (select (select |#memory_$Pointer$.offset| v_prenex_16) 16) 0) (= v_prenex_13 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_13) 8)) 8)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_13) 16)) 16)))) (exists ((v_prenex_14 Int)) (and (= (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16) main_~inner~0.offset) (= (select (select |#memory_$Pointer$.offset| v_prenex_14) 16) 0) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16) main_~inner~0.base) (= (select (select |#memory_$Pointer$.base| v_prenex_14) 8) (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 0)) (not (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16) (select (select |#memory_$Pointer$.base| v_prenex_14) 16))) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_14) 16)) 16)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16)) 0)) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 16)) 0)) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 16)) 16) 0) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_14) 16)) 0)) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) (select (select |#memory_$Pointer$.offset| v_prenex_14) 8)) v_prenex_14) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16)) 16)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 0)) (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16)) 0) 0) (not (= (select (select |#memory_$Pointer$.base| v_prenex_14) 16) v_prenex_14)) (not (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16) v_prenex_14)) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) (+ (select (select |#memory_$Pointer$.offset| v_prenex_14) 8) 16))) (not (= (select (select |#memory_$Pointer$.base| v_prenex_14) 8) (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8))) (= 0 (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16)) 16)) (= (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) (select (select |#memory_$Pointer$.offset| v_prenex_14) 8)) 0) (= 0 (select (select |#memory_$Pointer$.base| v_prenex_14) 0)) (= 0 (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) (+ (select (select |#memory_$Pointer$.offset| v_prenex_14) 8) 16))) (not (= (select (select |#memory_$Pointer$.base| v_prenex_14) 16) (select (select |#memory_$Pointer$.base| v_prenex_14) 8))) (not (= (select (select |#memory_$Pointer$.base| v_prenex_14) 16) 0)) (= 0 (select (select |#memory_$Pointer$.offset| v_prenex_14) 0)) (not (= (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8)) 16) (select (select |#memory_$Pointer$.base| v_prenex_14) 8))) (= (select (select |#memory_$Pointer$.offset| (select (select |#memory_$Pointer$.base| v_prenex_14) 8)) 8) 0)))) (= |main_#t~mem20.base| (select (select |#memory_$Pointer$.base| main_~inner~0.base) (+ main_~inner~0.offset 16)))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, true, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void heap_data_cart() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort bv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32);
		final Sort bv32Tobv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32Tobv32);
		mScript.declareFun("idxDim1", new Sort[0], bv32);
		mScript.declareFun("idxDim2", new Sort[0], bv32);
		mScript.declareFun("arr", new Sort[0], bv32Tobv32Tobv32);
		final String formulaAsString =
				"(and (= idxDim2 (_ bv0 32)) (exists ((x (_ BitVec 32))) (and (exists ((y Bool) (|â| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32))))) (and (not y) (or (and (not (bvslt (select (select |â| idxDim1) (bvadd idxDim2 (_ bv4 32))) x)) (not y)) (and y (bvslt (select (select |â| idxDim1) (bvadd idxDim2 (_ bv4 32))) x))) (= (select (select |â| idxDim1) (bvadd idxDim2 (_ bv8 32))) (_ bv0 32)) (= arr (store |â| idxDim1 (store (store (select |â| idxDim1) (bvadd idxDim2 (_ bv8 32)) x) (bvadd idxDim2 (_ bv4 32)) (select (store (select |â| idxDim1) (bvadd idxDim2 (_ bv8 32)) x) (bvadd idxDim2 (_ bv4 32)))))))) (not (bvslt x (_ bv0 32))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, true, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void heap_data_cart2() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort bv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32);
		final Sort bv32Tobv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32Tobv32);
		mScript.declareFun("arr", new Sort[0], bv32Tobv32Tobv32);
		mScript.declareFun("idxDim1", new Sort[0], bv32);
		mScript.declareFun("idxDim2", new Sort[0], bv32);
		final String formulaAsString =
				"(and (= idxDim2 (_ bv0 32)) (exists ((x (_ BitVec 32))) (and (exists ((|â| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (y (_ BitVec 32)) (z Bool)) (and (or (and (not (bvslt (select (select |â| y) (_ bv4 32)) x)) (not z)) (and (bvslt (select (select |â| y) (_ bv4 32)) x) z)) (= (store |â| y (store (store (select |â| y) (_ bv8 32) x) (_ bv4 32) (select (store (select |â| y) (_ bv8 32) x) (_ bv4 32)))) arr) (not (bvslt (select (select |â| idxDim1) (bvadd idxDim2 (_ bv4 32))) (select (select |â| idxDim1) (bvadd idxDim2 (_ bv8 32))))) (not (bvslt (select (select |â| idxDim1) (bvadd idxDim2 (_ bv8 32))) (_ bv0 32))) (not z))) (not (bvslt x (_ bv0 32))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, true, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void list_simple_dll2cupdateall() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort bv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32);
		final Sort bv32Tobv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32Tobv32);
		mScript.declareFun("main_~s~0.base", new Sort[0], bv32);
		mScript.declareFun("main_~s~0.offset", new Sort[0], bv32);
		mScript.declareFun("main_~new_data~0", new Sort[0], bv32);
		mScript.declareFun("#memory_$Pointer$.base", new Sort[0], bv32Tobv32Tobv32);
		mScript.declareFun("main_~len~0", new Sort[0], bv32);
		final String formulaAsString =
				"(forall ((|v_dll_circular_update_at_#in~head.offset_11| (_ BitVec 32)) (|v_#memory_int_114| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (v_dll_circular_update_at_~head.offset_21 (_ BitVec 32)) (|v_#memory_int_115| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|v_#memory_$Pointer$.base_115| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (v_dll_circular_update_at_~data_16 (_ BitVec 32)) (|v_dll_circular_update_at_#in~head.base_11| (_ BitVec 32)) (v_dll_circular_update_at_~head.base_21 (_ BitVec 32)) (|v_dll_circular_update_at_#in~data_10| (_ BitVec 32)) (|v_old(#memory_$Pointer$.base)_40| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32))))) (or (forall ((v_dll_circular_update_at_~head.offset_16 (_ BitVec 32)) (v_dll_circular_update_at_~data_12 (_ BitVec 32))) (= (select (select (store |v_#memory_int_115| (select (select |v_#memory_$Pointer$.base_115| main_~s~0.base) main_~s~0.offset) (store (select |v_#memory_int_115| (select (select |v_#memory_$Pointer$.base_115| main_~s~0.base) main_~s~0.offset)) (bvadd v_dll_circular_update_at_~head.offset_16 (_ bv8 32)) v_dll_circular_update_at_~data_12)) main_~s~0.base) (bvadd main_~s~0.offset (_ bv8 32))) main_~len~0)) (not (and (= v_dll_circular_update_at_~data_16 |v_dll_circular_update_at_#in~data_10|) (= |v_#memory_int_115| (store |v_#memory_int_114| v_dll_circular_update_at_~head.base_21 (store (select |v_#memory_int_114| v_dll_circular_update_at_~head.base_21) (bvadd v_dll_circular_update_at_~head.offset_21 (_ bv8 32)) v_dll_circular_update_at_~data_16))) (= main_~s~0.base |v_dll_circular_update_at_#in~head.base_11|) (= (store |v_old(#memory_$Pointer$.base)_40| v_dll_circular_update_at_~head.base_21 (store (select |v_old(#memory_$Pointer$.base)_40| v_dll_circular_update_at_~head.base_21) (bvadd v_dll_circular_update_at_~head.offset_21 (_ bv8 32)) (select (select |v_#memory_$Pointer$.base_115| v_dll_circular_update_at_~head.base_21) (bvadd v_dll_circular_update_at_~head.offset_21 (_ bv8 32))))) |v_#memory_$Pointer$.base_115|) (= |v_dll_circular_update_at_#in~head.base_11| v_dll_circular_update_at_~head.base_21) (= |v_dll_circular_update_at_#in~head.offset_11| main_~s~0.offset) (= main_~new_data~0 |v_dll_circular_update_at_#in~data_10|) (= |v_old(#memory_$Pointer$.base)_40| |#memory_$Pointer$.base|) (= |v_dll_circular_update_at_#in~head.offset_11| v_dll_circular_update_at_~head.offset_21)))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void sll_circular_traversal_2() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort bv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32);
		final Sort bv32Tobv32Tobv32 = SmtSortUtils.getArraySort(mScript, bv32, bv32Tobv32);
		mScript.declareFun("sll_circular_create_~new_head~0.base", new Sort[0], bv32);
		mScript.declareFun("sll_circular_create_~new_head~0.offset", new Sort[0], bv32);
		mScript.declareFun("sll_circular_create_~head~0.offset", new Sort[0], bv32);
		mScript.declareFun("sll_circular_create_~head~0.base", new Sort[0], bv32);
		mScript.declareFun("sll_circular_create_~last~0.base", new Sort[0], bv32);
		mScript.declareFun("sll_circular_create_~last~0.offset", new Sort[0], bv32);
		mScript.declareFun("#length", new Sort[0], bv32Tobv32);
		final String formulaAsString =
				"(forall ((|#memory_$Pointer$.base| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|#memory_$Pointer$.offset| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|v_#memory_$Pointer$.offset_156| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (|v_#memory_$Pointer$.base_164| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32))))) (or (and (= sll_circular_create_~new_head~0.base (select (select (store |v_#memory_$Pointer$.base_164| sll_circular_create_~last~0.base (store (select |v_#memory_$Pointer$.base_164| sll_circular_create_~last~0.base) sll_circular_create_~last~0.offset sll_circular_create_~new_head~0.base)) sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset)) (= (select (select (store |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base (store (select |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base) sll_circular_create_~last~0.offset sll_circular_create_~new_head~0.offset)) sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset) sll_circular_create_~new_head~0.offset)) (not (and (= (store |#memory_$Pointer$.offset| sll_circular_create_~new_head~0.base (store (select |#memory_$Pointer$.offset| sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset sll_circular_create_~head~0.offset)) |v_#memory_$Pointer$.offset_156|) (= (store |#memory_$Pointer$.base| sll_circular_create_~new_head~0.base (store (select |#memory_$Pointer$.base| sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset sll_circular_create_~head~0.base)) |v_#memory_$Pointer$.base_164|))) (and (bvule (bvadd (select (select (store |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base (store (select |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base) sll_circular_create_~last~0.offset sll_circular_create_~new_head~0.offset)) sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset) (_ bv8 32)) (select |#length| (select (select (store |v_#memory_$Pointer$.base_164| sll_circular_create_~last~0.base (store (select |v_#memory_$Pointer$.base_164| sll_circular_create_~last~0.base) sll_circular_create_~last~0.offset sll_circular_create_~new_head~0.base)) sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset))) (bvule (bvadd (select (select (store |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base (store (select |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base) sll_circular_create_~last~0.offset sll_circular_create_~new_head~0.offset)) sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset) (_ bv4 32)) (bvadd (select (select (store |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base (store (select |v_#memory_$Pointer$.offset_156| sll_circular_create_~last~0.base) sll_circular_create_~last~0.offset sll_circular_create_~new_head~0.offset)) sll_circular_create_~new_head~0.base) sll_circular_create_~new_head~0.offset) (_ bv8 32))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void heap_data_calendar() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		mScript.declareFun("main_~ev1~0", new Sort[0], bv32);
		mScript.declareFun("main_~ev2~0", new Sort[0], bv32);
		final String formulaAsString =
				"(forall ((|#memory_int| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (v_main_~p~0.offset_6 (_ BitVec 32)) (v_main_~l~0.base_13 (_ BitVec 32)) (|v_main_#t~malloc5.offset_6| (_ BitVec 32)) (|v_#memory_int_19| (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 32)))) (v_main_~p~0.base_6 (_ BitVec 32)) (v_main_~l~0.offset_13 (_ BitVec 32))) (or (not (and (= v_main_~p~0.base_6 v_main_~l~0.base_13) (= |v_#memory_int_19| (store |#memory_int| v_main_~p~0.base_6 (store (store (store (select |#memory_int| v_main_~p~0.base_6) (bvadd v_main_~p~0.offset_6 (_ bv4 32)) main_~ev1~0) (bvadd v_main_~p~0.offset_6 (_ bv8 32)) main_~ev2~0) v_main_~p~0.offset_6 (select (select |v_#memory_int_19| v_main_~p~0.base_6) v_main_~p~0.offset_6)))) (= v_main_~l~0.offset_13 v_main_~p~0.offset_6) (or (not (= (_ bv3 32) main_~ev2~0)) (not (= (_ bv1 32) main_~ev1~0))) (= (_ bv0 32) |v_main_#t~malloc5.offset_6|) (= v_main_~p~0.offset_6 |v_main_#t~malloc5.offset_6|))) (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (v_DerPreprocessor_2 (_ BitVec 32)) (v_main_~p~0.base_5 (_ BitVec 32))) (or (not (= (bvadd (select (select (store |v_#memory_int_19| v_main_~p~0.base_5 (store (store (store (select |v_#memory_int_19| v_main_~p~0.base_5) (_ bv4 32) x) (_ bv8 32) y) (_ bv0 32) v_DerPreprocessor_2)) v_main_~l~0.base_13) (bvadd v_main_~l~0.offset_13 (_ bv8 32))) (_ bv4294967293 32)) (_ bv0 32))) (bvsgt x (_ bv3 32)) (= (_ bv3 32) y) (not (= (_ bv1 32) (select (store (store (store (select |v_#memory_int_19| v_main_~p~0.base_5) (_ bv4 32) x) (_ bv8 32) y) (_ bv0 32) v_DerPreprocessor_2) (_ bv4 32)))) (bvslt x (_ bv0 32)) (not (= (_ bv0 32) (bvadd (select (select (store |v_#memory_int_19| v_main_~p~0.base_5 (store (store (store (select |v_#memory_int_19| v_main_~p~0.base_5) (_ bv4 32) x) (_ bv8 32) y) (_ bv0 32) v_DerPreprocessor_2)) v_main_~l~0.base_13) (bvadd v_main_~l~0.offset_13 (_ bv4 32))) (_ bv4294967295 32))))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void memleaks_test1_3() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort bv1 = SmtSortUtils.getBitvectorSort(mScript, 1);
		final Sort bv32Tobv1 = SmtSortUtils.getArraySort(mScript, bv32, bv1);
		mScript.declareFun("#valid", new Sort[0], bv32Tobv1);
		mScript.declareFun("old(#valid)", new Sort[0], bv32Tobv1);
		final String formulaAsString =
				"(forall ((|v_old(#valid)_BEFORE_CALL_3| (Array (_ BitVec 32) (_ BitVec 1)))) (or (= |#valid| |v_old(#valid)_BEFORE_CALL_3|) (not (forall ((v_entry_point_~p~0.base_12 (_ BitVec 32))) (or (not (= (select |old(#valid)| v_entry_point_~p~0.base_12) (_ bv0 1))) (= |v_old(#valid)_BEFORE_CALL_3| (store |old(#valid)| v_entry_point_~p~0.base_12 (_ bv0 1))))))))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	/**
	 * Regression test for bug in array PQE. Should maybe be moved to different file.
	 */
	@Test
	public void memleaks_test4_2() {
		final Sort bv32 = SmtSortUtils.getBitvectorSort(mScript, 32);
		final Sort bv1 = SmtSortUtils.getBitvectorSort(mScript, 1);
		final Sort bv32Tobv1 = SmtSortUtils.getArraySort(mScript, bv32, bv1);
		mScript.declareFun("old(#valid)", new Sort[0], bv32Tobv1);
		mScript.declareFun("#valid", new Sort[0], bv32Tobv1);
		final String formulaAsString =
				"(forall ((|v_old(#valid)_BEFORE_CALL_8| (Array (_ BitVec 32) (_ BitVec 1)))) (or (not (forall ((v_entry_point_~p~0.base_23 (_ BitVec 32)) (v_entry_point_~q~0.base_17 (_ BitVec 32))) (or (= (store (store (store |old(#valid)| v_entry_point_~p~0.base_23 (_ bv1 1)) v_entry_point_~q~0.base_17 (_ bv0 1)) v_entry_point_~p~0.base_23 (_ bv0 1)) |v_old(#valid)_BEFORE_CALL_8|) (not (= (_ bv0 1) (select |old(#valid)| v_entry_point_~p~0.base_23))) (not (= (select (store |old(#valid)| v_entry_point_~p~0.base_23 (_ bv1 1)) v_entry_point_~q~0.base_17) (_ bv0 1)))))) (= |#valid| |v_old(#valid)_BEFORE_CALL_8|)))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	@Test
	public void LazycseqOctaveOfEaster() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		final Sort intintintArraySort =
				SmtSortUtils.getArraySort(mScript, intSort, SmtSortUtils.getArraySort(mScript, intSort, intSort));
		mScript.declareFun("~#__cs_active_thread~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_pc~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_pc_cs~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_threadargs~0.base", new Sort[0], intSort);
		mScript.declareFun("~#mutex~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_local_main_t1~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_local_main_t2~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_local_main_t3~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_pc~0.offset", new Sort[0], intSort);
		mScript.declareFun("~#__cs_active_thread~0.offset", new Sort[0], intSort);
		mScript.declareFun("#memory_int", new Sort[0], intintintArraySort);
		final String formulaAsString =
				"(and (= |~#__cs_pc~0.offset| 0) (exists ((|~#__cs_keys~0.base| Int) (|#t~string15.base| Int) (|#t~string19.base| Int) (|#t~string20.base| Int) (|v_#valid_36| (Array Int Int)) (|#t~string9.base| Int) (|#t~string13.base| Int) (|~#__cs_thread_lines~0.base| Int) (|#t~string2.base| Int)) (and (= (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store |v_#valid_36| 0 0) |#t~string2.base| 1) |#t~string9.base| 1) |#t~string13.base| 1) |#t~string15.base| 1) |#t~string19.base| 1) |#t~string20.base| 1) |~#__cs_active_thread~0.base| 1) |~#__cs_pc~0.base| 1) |~#__cs_pc_cs~0.base| 1) |~#__cs_thread_lines~0.base| 1) |~#__cs_threadargs~0.base| 1) |~#__cs_keys~0.base| 1) |~#mutex~0.base| 1) |~#__cs_local_main_t1~0.base| 1) |~#__cs_local_main_t2~0.base| 1) |~#__cs_local_main_t3~0.base|) 0) (= (select (store (store (store (store (store (store (store (store (store (store (store (store (store |v_#valid_36| 0 0) |#t~string2.base| 1) |#t~string9.base| 1) |#t~string13.base| 1) |#t~string15.base| 1) |#t~string19.base| 1) |#t~string20.base| 1) |~#__cs_active_thread~0.base| 1) |~#__cs_pc~0.base| 1) |~#__cs_pc_cs~0.base| 1) |~#__cs_thread_lines~0.base| 1) |~#__cs_threadargs~0.base| 1) |~#__cs_keys~0.base| 1) |~#mutex~0.base|) 0) (= 0 (select (store (store (store (store (store (store (store (store |v_#valid_36| 0 0) |#t~string2.base| 1) |#t~string9.base| 1) |#t~string13.base| 1) |#t~string15.base| 1) |#t~string19.base| 1) |#t~string20.base| 1) |~#__cs_active_thread~0.base| 1) |~#__cs_pc~0.base|)) (= (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store |v_#valid_36| 0 0) |#t~string2.base| 1) |#t~string9.base| 1) |#t~string13.base| 1) |#t~string15.base| 1) |#t~string19.base| 1) |#t~string20.base| 1) |~#__cs_active_thread~0.base| 1) |~#__cs_pc~0.base| 1) |~#__cs_pc_cs~0.base| 1) |~#__cs_thread_lines~0.base| 1) |~#__cs_threadargs~0.base| 1) |~#__cs_keys~0.base| 1) |~#mutex~0.base| 1) |~#__cs_local_main_t1~0.base|) 0) (= (select (store (store (store (store (store (store (store (store (store |v_#valid_36| 0 0) |#t~string2.base| 1) |#t~string9.base| 1) |#t~string13.base| 1) |#t~string15.base| 1) |#t~string19.base| 1) |#t~string20.base| 1) |~#__cs_active_thread~0.base| 1) |~#__cs_pc~0.base| 1) |~#__cs_pc_cs~0.base|) 0) (= (select (store (store (store (store (store (store (store (store (store (store (store |v_#valid_36| 0 0) |#t~string2.base| 1) |#t~string9.base| 1) |#t~string13.base| 1) |#t~string15.base| 1) |#t~string19.base| 1) |#t~string20.base| 1) |~#__cs_active_thread~0.base| 1) |~#__cs_pc~0.base| 1) |~#__cs_pc_cs~0.base| 1) |~#__cs_thread_lines~0.base| 1) |~#__cs_threadargs~0.base|) 0) (= 0 (select (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store |v_#valid_36| 0 0) |#t~string2.base| 1) |#t~string9.base| 1) |#t~string13.base| 1) |#t~string15.base| 1) |#t~string19.base| 1) |#t~string20.base| 1) |~#__cs_active_thread~0.base| 1) |~#__cs_pc~0.base| 1) |~#__cs_pc_cs~0.base| 1) |~#__cs_thread_lines~0.base| 1) |~#__cs_threadargs~0.base| 1) |~#__cs_keys~0.base| 1) |~#mutex~0.base| 1) |~#__cs_local_main_t1~0.base| 1) |~#__cs_local_main_t2~0.base|)))) (= |~#__cs_active_thread~0.offset| 0) (= (select (select |#memory_int| |~#__cs_active_thread~0.base|) (+ |~#__cs_active_thread~0.offset| 8)) 0))";
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaAsString, null, false, mServices, mLogger,
				mMgdScript, mCsvWriter);
	}

	@Test
	public void LazycseqOctaveOfEaster_IntegerOnly() {
		final Sort intSort = SmtSortUtils.getIntSort(mMgdScript);
		mScript.declareFun("#t~string19.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_local_main_t3~0.base", new Sort[0], intSort);
		mScript.declareFun("~#mutex~0.base", new Sort[0], intSort);
		mScript.declareFun("#t~string13.base", new Sort[0], intSort);
		mScript.declareFun("#t~string15.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_threadargs~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_local_main_t2~0.base", new Sort[0], intSort);
		mScript.declareFun("#t~string2.base", new Sort[0], intSort);
		mScript.declareFun("#t~string20.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_local_main_t1~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_thread_lines~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_pc_cs~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_keys~0.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_pc~0.base", new Sort[0], intSort);
		mScript.declareFun("#t~string9.base", new Sort[0], intSort);
		mScript.declareFun("~#__cs_active_thread~0.base", new Sort[0], intSort);
		final String formulaAsString =
				"(exists ((v_arrayElimCell_30 Int) (v_arrayElimCell_29 Int) (v_arrayElimCell_28 Int) (v_arrayElimCell_32 Int) (v_arrayElimCell_31 Int) (v_arrayElimCell_34 Int) (v_arrayElimCell_33 Int)) (let ((.cse166 (= |~#__cs_local_main_t1~0.base| |~#__cs_threadargs~0.base|)) (.cse165 (= |~#__cs_local_main_t1~0.base| |~#__cs_pc_cs~0.base|)) (.cse163 (= |~#__cs_local_main_t1~0.base| |#t~string9.base|)) (.cse114 (= |~#__cs_threadargs~0.base| |~#__cs_local_main_t3~0.base|)) (.cse116 (= |~#__cs_local_main_t3~0.base| |~#__cs_pc_cs~0.base|)) (.cse120 (= |~#__cs_local_main_t2~0.base| |~#__cs_local_main_t3~0.base|)) (.cse125 (= |~#__cs_local_main_t1~0.base| |~#__cs_local_main_t3~0.base|)) (.cse122 (= |~#__cs_pc~0.base| |~#__cs_local_main_t3~0.base|)) (.cse69 (= |#t~string13.base| |~#__cs_pc_cs~0.base|)) (.cse11 (= |#t~string19.base| |~#__cs_threadargs~0.base|))) (let ((.cse14 (not (= |~#__cs_pc~0.base| |~#__cs_local_main_t2~0.base|))) (.cse22 (not (= |~#__cs_local_main_t1~0.base| |~#__cs_local_main_t2~0.base|))) (.cse10 (not .cse11)) (.cse12 (not .cse69)) (.cse20 (not (= |~#__cs_local_main_t2~0.base| |~#__cs_threadargs~0.base|))) (.cse21 (not (= |~#__cs_local_main_t2~0.base| |~#mutex~0.base|))) (.cse25 (not (= |~#__cs_local_main_t2~0.base| |~#__cs_pc_cs~0.base|))) (.cse64 (not (= |~#__cs_pc~0.base| |~#__cs_pc_cs~0.base|))) (.cse2 (not (= |~#__cs_pc~0.base| |~#__cs_threadargs~0.base|))) (.cse60 (not .cse122)) (.cse71 (not .cse125)) (.cse72 (not .cse120)) (.cse16 (not (= |~#mutex~0.base| |~#__cs_local_main_t3~0.base|))) (.cse1 (not (= |~#__cs_threadargs~0.base| |~#__cs_pc_cs~0.base|))) (.cse33 (not (= |~#mutex~0.base| |~#__cs_pc_cs~0.base|))) (.cse138 (not (= |~#__cs_pc~0.base| |~#mutex~0.base|))) (.cse13 (not (= |~#__cs_threadargs~0.base| |~#mutex~0.base|))) (.cse85 (not .cse116)) (.cse78 (not .cse114)) (.cse15 (not .cse163)) (.cse18 (not .cse165)) (.cse17 (not .cse166)) (.cse70 (not (= |~#__cs_pc~0.base| |~#__cs_local_main_t1~0.base|))) (.cse159 (not (= |~#__cs_local_main_t1~0.base| |~#mutex~0.base|)))) (and (let ((.cse0 (not (= |#t~string20.base| |~#__cs_threadargs~0.base|))) (.cse3 (= 0 |~#__cs_threadargs~0.base|)) (.cse4 (not (= |#t~string13.base| |~#__cs_threadargs~0.base|))) (.cse5 (not (= |#t~string9.base| |~#__cs_threadargs~0.base|))) (.cse6 (not (= |#t~string2.base| |~#__cs_threadargs~0.base|))) (.cse7 (not (= |~#__cs_active_thread~0.base| |~#__cs_threadargs~0.base|))) (.cse8 (not (= |#t~string15.base| |~#__cs_threadargs~0.base|))) (.cse9 (not (= |~#__cs_thread_lines~0.base| |~#__cs_threadargs~0.base|)))) (or (and (or (and .cse0 .cse1 (= 0 v_arrayElimCell_29) .cse2 (not .cse3) .cse4 .cse5 .cse6 .cse7 .cse8 .cse9) (and .cse0 .cse3 .cse1 .cse2 .cse4 .cse5 .cse6 .cse7 .cse8 .cse9)) .cse10) (and .cse0 .cse3 .cse1 .cse2 .cse4 .cse5 .cse6 .cse7 .cse8 .cse9 .cse11))) .cse12 (or (= v_arrayElimCell_29 v_arrayElimCell_30) .cse13) (or .cse14 (= v_arrayElimCell_28 v_arrayElimCell_33)) .cse15 (or .cse16 (= v_arrayElimCell_30 v_arrayElimCell_32)) (or .cse17 (= v_arrayElimCell_29 v_arrayElimCell_31)) .cse18 (let ((.cse19 (not (= |~#__cs_keys~0.base| |~#__cs_local_main_t2~0.base|))) (.cse23 (not (= |#t~string19.base| |~#__cs_local_main_t2~0.base|))) (.cse24 (= |~#__cs_local_main_t2~0.base| 0)) (.cse26 (not (= |~#__cs_local_main_t2~0.base| |#t~string20.base|))) (.cse27 (not (= |#t~string15.base| |~#__cs_local_main_t2~0.base|))) (.cse28 (not (= |#t~string2.base| |~#__cs_local_main_t2~0.base|))) (.cse29 (not (= |#t~string9.base| |~#__cs_local_main_t2~0.base|))) (.cse30 (not (= |~#__cs_active_thread~0.base| |~#__cs_local_main_t2~0.base|))) (.cse31 (not (= |~#__cs_local_main_t2~0.base| |~#__cs_thread_lines~0.base|))) (.cse32 (not (= |#t~string13.base| |~#__cs_local_main_t2~0.base|)))) (or (and .cse19 .cse20 .cse21 .cse22 .cse23 .cse24 .cse25 .cse26 .cse27 .cse28 .cse14 .cse29 .cse30 .cse31 .cse32) (and .cse19 .cse20 .cse21 .cse22 (= 0 v_arrayElimCell_33) .cse23 (not .cse24) .cse25 .cse26 .cse27 .cse28 .cse14 .cse29 .cse30 .cse31 .cse32))) (or .cse33 (= v_arrayElimCell_30 v_arrayElimCell_34)) (or .cse22 (= v_arrayElimCell_33 v_arrayElimCell_31)) (let ((.cse47 (= |~#__cs_pc~0.base| 0)) (.cse51 (= |~#__cs_pc~0.base| |#t~string9.base|)) (.cse50 (= |~#__cs_pc~0.base| |#t~string13.base|)) (.cse54 (= |~#__cs_pc~0.base| |#t~string2.base|)) (.cse53 (= |~#__cs_active_thread~0.base| |~#__cs_pc~0.base|))) (let ((.cse35 (not .cse53)) (.cse34 (not .cse54)) (.cse38 (not .cse50)) (.cse43 (not (= |~#__cs_pc~0.base| |#t~string20.base|))) (.cse48 (not .cse51)) (.cse44 (not .cse47)) (.cse45 (not (= |~#__cs_pc~0.base| |#t~string19.base|))) (.cse46 (= 0 v_arrayElimCell_28)) (.cse59 (= |~#__cs_pc~0.base| |#t~string15.base|))) (let ((.cse55 (not .cse59)) (.cse39 (and .cse35 .cse59 .cse34 .cse38 .cse43 .cse48 .cse44 .cse45 .cse46))) (let ((.cse58 (or (and .cse35 .cse38 .cse34 .cse43 .cse48 .cse44 .cse45 .cse55 .cse46) .cse39))) (let ((.cse37 (and .cse58 .cse50))) (let ((.cse57 (or .cse37 (and .cse58 .cse38)))) (let ((.cse36 (and .cse51 .cse55 .cse57))) (let ((.cse56 (and (or .cse36 (and .cse48 .cse55 .cse57)) .cse53))) (or (and .cse34 (or (and .cse35 (or .cse36 (and (or .cse37 (and .cse38 (or .cse39 (and (let ((.cse42 (and .cse43 .cse47 .cse45 .cse54))) (let ((.cse52 (or (and .cse34 .cse43 .cse47 .cse45) .cse42))) (let ((.cse41 (and .cse52 .cse53))) (let ((.cse49 (or (and .cse35 .cse52) .cse41))) (let ((.cse40 (and .cse51 .cse49))) (or (and .cse38 (or .cse40 (and (or .cse41 (and .cse35 (or .cse42 (and .cse34 (or (and .cse43 .cse44 .cse45 .cse46) (and .cse43 .cse47 .cse45)))))) .cse48))) (and (or (and .cse48 .cse49) .cse40) .cse50))))))) .cse55)))) .cse48 .cse55))) .cse56)) (and .cse54 (or .cse56 (and .cse35 (or .cse36 (and (or .cse37 (and .cse38 (or .cse39 (and .cse35 .cse34 .cse38 .cse43 .cse48 .cse44 .cse45 .cse55 .cse46)))) .cse48 .cse55)))))))))))))) .cse10 (or (= v_arrayElimCell_28 v_arrayElimCell_32) .cse60) (let ((.cse67 (= 0 |~#__cs_pc_cs~0.base|)) (.cse61 (not (= |#t~string15.base| |~#__cs_pc_cs~0.base|))) (.cse62 (not (= |#t~string2.base| |~#__cs_pc_cs~0.base|))) (.cse63 (not (= |#t~string19.base| |~#__cs_pc_cs~0.base|))) (.cse65 (not (= |#t~string20.base| |~#__cs_pc_cs~0.base|))) (.cse66 (not (= |~#__cs_active_thread~0.base| |~#__cs_pc_cs~0.base|))) (.cse68 (not (= |#t~string9.base| |~#__cs_pc_cs~0.base|)))) (or (and .cse12 (or (and .cse61 .cse62 .cse63 .cse64 .cse65 .cse66 (= 0 v_arrayElimCell_34) (not .cse67) .cse68) (and .cse67 .cse61 .cse62 .cse63 .cse64 .cse65 .cse66 .cse68))) (and .cse67 .cse61 .cse62 .cse63 .cse64 .cse65 .cse66 .cse69 .cse68))) (or .cse20 (= v_arrayElimCell_29 v_arrayElimCell_33)) (or (= v_arrayElimCell_34 v_arrayElimCell_31) .cse18) (or .cse21 (= v_arrayElimCell_30 v_arrayElimCell_33)) (or (= v_arrayElimCell_28 v_arrayElimCell_31) .cse70) (or .cse25 (= v_arrayElimCell_34 v_arrayElimCell_33)) (or (= v_arrayElimCell_32 v_arrayElimCell_31) .cse71) (or .cse64 (= v_arrayElimCell_28 v_arrayElimCell_34)) (or .cse72 (= v_arrayElimCell_33 v_arrayElimCell_32)) (or (= v_arrayElimCell_29 v_arrayElimCell_28) .cse2) (let ((.cse129 (= |#t~string15.base| |~#__cs_local_main_t3~0.base|)) (.cse102 (= 0 |~#__cs_local_main_t3~0.base|)) (.cse128 (= |#t~string19.base| |~#__cs_local_main_t3~0.base|))) (let ((.cse104 (= 0 v_arrayElimCell_32)) (.cse96 (not .cse128)) (.cse105 (not .cse102)) (.cse103 (not (= |#t~string13.base| |~#__cs_local_main_t3~0.base|))) (.cse86 (not .cse129))) (let ((.cse100 (and .cse104 .cse96 .cse105 .cse16 .cse103 .cse86 .cse114))) (let ((.cse137 (or .cse100 (and .cse104 .cse78 .cse96 .cse105 .cse16 .cse103 .cse86)))) (let ((.cse99 (and .cse137 .cse120))) (let ((.cse136 (or (and (or .cse100 (and .cse104 .cse78 .cse105 .cse16 .cse96 .cse103 .cse86)) .cse72) .cse99)) (.cse93 (= |#t~string2.base| |~#__cs_local_main_t3~0.base|))) (let ((.cse87 (not .cse93)) (.cse98 (and .cse93 .cse136)) (.cse88 (= |#t~string20.base| |~#__cs_local_main_t3~0.base|))) (let ((.cse89 (not .cse88)) (.cse135 (or (and .cse87 (or (and .cse72 .cse137) .cse99)) .cse98))) (let ((.cse95 (and .cse89 .cse128 .cse71 .cse135))) (let ((.cse82 (or .cse95 (and .cse89 .cse96 (or (and .cse87 .cse136) .cse98) .cse71)))) (let ((.cse81 (and .cse125 .cse82))) (let ((.cse133 (or (and .cse71 (or (and .cse89 .cse96 .cse71 .cse135) .cse95)) .cse81)) (.cse134 (= |~#__cs_thread_lines~0.base| |~#__cs_local_main_t3~0.base|))) (let ((.cse123 (= |~#__cs_keys~0.base| |~#__cs_local_main_t3~0.base|)) (.cse83 (not .cse134)) (.cse80 (and .cse133 .cse134))) (let ((.cse132 (or (and .cse83 .cse133) .cse80)) (.cse84 (not .cse123))) (let ((.cse79 (and .cse72 .cse132 .cse116 .cse84 .cse83 .cse60)) (.cse118 (= |#t~string9.base| |~#__cs_local_main_t3~0.base|))) (let ((.cse75 (not .cse118)) (.cse131 (or .cse79 (and .cse72 .cse132 .cse84 .cse83 .cse85 .cse60)))) (let ((.cse113 (= |~#__cs_active_thread~0.base| |~#__cs_local_main_t3~0.base|)) (.cse77 (and .cse75 .cse78 .cse131 .cse129 .cse85))) (let ((.cse130 (or (and .cse75 .cse78 .cse131 .cse85 .cse86) .cse77)) (.cse76 (not .cse113))) (let ((.cse74 (and .cse118 .cse130 .cse76))) (let ((.cse73 (and (or .cse74 (and .cse75 .cse130 .cse76)) .cse113))) (or (and (or .cse73 (and (or .cse74 (and .cse75 .cse76 (or .cse77 (and .cse75 .cse78 (or .cse79 (and .cse72 (or .cse80 (and (or .cse81 (and .cse71 .cse82)) .cse83)) .cse84 .cse83 .cse85 .cse60)) .cse85 .cse86)))) .cse76)) .cse87 .cse88) (and .cse89 (let ((.cse106 (and .cse16 .cse102 .cse129 .cse103))) (let ((.cse127 (or .cse106 (and .cse16 .cse102 .cse103 .cse86)))) (let ((.cse101 (and .cse128 .cse127))) (let ((.cse126 (or .cse101 (and .cse96 .cse127)))) (let ((.cse97 (and .cse72 .cse78 .cse87 .cse126 .cse88))) (let ((.cse124 (or (and .cse89 .cse72 .cse78 .cse87 .cse126) .cse97))) (let ((.cse107 (and .cse125 .cse124))) (let ((.cse121 (or (and .cse124 .cse71) .cse107))) (let ((.cse108 (and .cse123 .cse96 .cse121 .cse71 .cse83))) (let ((.cse117 (or (and .cse96 .cse121 .cse71 .cse83 .cse84) .cse108))) (let ((.cse109 (and .cse122 .cse117))) (let ((.cse119 (or .cse109 (and (or .cse108 (and .cse96 .cse121 .cse71 .cse84 .cse83)) .cse60)))) (let ((.cse110 (and .cse120 .cse119))) (let ((.cse115 (or .cse110 (and .cse72 .cse119)))) (let ((.cse111 (and .cse118 .cse115 .cse85 .cse84 .cse60))) (let ((.cse112 (or (and .cse75 (or (and .cse72 (or .cse109 (and .cse117 .cse60))) .cse110) .cse85 .cse84 .cse60) .cse111))) (let ((.cse94 (and .cse112 .cse116))) (let ((.cse90 (or (and .cse85 (or (and .cse75 .cse115 .cse85 .cse84 .cse60) .cse111)) .cse94))) (let ((.cse91 (and .cse90 .cse114))) (let ((.cse92 (and (or (and .cse78 (or (and .cse112 .cse85) .cse94)) .cse91) .cse113 .cse86))) (or (and .cse75 (or (and (or (and .cse78 .cse90) .cse91) .cse76 .cse86) .cse92) .cse76 .cse93) (and .cse87 (or (and (or .cse74 (and .cse75 (or (and (or .cse77 (and (or (and .cse78 (or .cse94 (and (or (and .cse75 (or .cse79 (and (or (and .cse72 (or (and (or (and .cse84 .cse83 (or (and (or .cse81 (and (or .cse95 (and .cse96 (or (and .cse71 (or .cse97 (and .cse89 (or .cse98 (and (or .cse99 (and .cse72 (or .cse100 (and (or .cse101 (and .cse96 (or (and (or (and .cse16 .cse102 .cse103) (and .cse104 .cse105 .cse16 .cse103)) .cse86) .cse106))) .cse78)))) .cse87))))) .cse107))) .cse71)) .cse83) .cse80)) .cse108) .cse60) .cse109)) .cse110) .cse85 .cse84 .cse60))) .cse111) .cse85))) .cse91) .cse86)) .cse76) .cse92))) .cse76) .cse73))))))))))))))))))))))))))))))))))))))))))))) (or .cse138 (= v_arrayElimCell_28 v_arrayElimCell_30)) (or .cse1 (= v_arrayElimCell_29 v_arrayElimCell_34)) (let ((.cse140 (not (= |~#__cs_active_thread~0.base| |~#mutex~0.base|))) (.cse141 (not (= |#t~string19.base| |~#mutex~0.base|))) (.cse142 (not (= |#t~string9.base| |~#mutex~0.base|))) (.cse143 (not (= |~#__cs_thread_lines~0.base| |~#mutex~0.base|))) (.cse144 (not (= |~#__cs_keys~0.base| |~#mutex~0.base|))) (.cse139 (= 0 |~#mutex~0.base|)) (.cse145 (not (= |#t~string13.base| |~#mutex~0.base|))) (.cse146 (not (= |#t~string2.base| |~#mutex~0.base|))) (.cse147 (not (= |#t~string20.base| |~#mutex~0.base|))) (.cse148 (not (= |#t~string15.base| |~#mutex~0.base|)))) (or (and .cse33 (not .cse139) .cse140 .cse141 .cse142 .cse143 .cse144 .cse145 (= 0 v_arrayElimCell_30) .cse146 .cse138 .cse13 .cse147 .cse148) (and .cse33 .cse140 .cse141 .cse142 .cse143 .cse144 .cse139 .cse145 .cse146 .cse138 .cse13 .cse147 .cse148))) (or (= v_arrayElimCell_34 v_arrayElimCell_32) .cse85) (or (= v_arrayElimCell_29 v_arrayElimCell_32) .cse78) (let ((.cse151 (= |~#__cs_local_main_t1~0.base| 0))) (let ((.cse153 (not (= |~#__cs_local_main_t1~0.base| |#t~string15.base|))) (.cse156 (not (= |~#__cs_local_main_t1~0.base| |#t~string2.base|))) (.cse157 (not (= |~#__cs_local_main_t1~0.base| |#t~string19.base|))) (.cse161 (not .cse151)) (.cse150 (not (= |~#__cs_local_main_t1~0.base| |#t~string20.base|))) (.cse152 (not (= |~#__cs_active_thread~0.base| |~#__cs_local_main_t1~0.base|))) (.cse160 (= 0 v_arrayElimCell_31)) (.cse154 (not (= |~#__cs_local_main_t1~0.base| |~#__cs_keys~0.base|))) (.cse155 (not (= |~#__cs_local_main_t1~0.base| |#t~string13.base|))) (.cse158 (not (= |~#__cs_local_main_t1~0.base| |~#__cs_thread_lines~0.base|)))) (let ((.cse162 (and .cse153 .cse156 .cse157 .cse161 .cse159 .cse150 .cse166 .cse152 .cse160 .cse70 .cse154 .cse155 .cse158))) (let ((.cse164 (or (and .cse153 .cse17 .cse156 .cse157 .cse161 .cse159 .cse150 .cse152 .cse160 .cse70 .cse154 .cse155 .cse158) .cse162))) (let ((.cse149 (and .cse165 .cse17 .cse164))) (or (and (or .cse149 (and .cse17 (or (and .cse17 (or (and .cse150 .cse151 .cse152 .cse153 .cse70 .cse154 .cse155 .cse156 .cse157 .cse158 .cse159) (and .cse150 .cse152 .cse160 .cse153 .cse70 .cse154 .cse155 .cse156 .cse157 .cse158 .cse161 .cse159))) .cse162) .cse18)) .cse15) (and .cse163 (or .cse149 (and .cse17 .cse164 .cse18))))))))) (or (= v_arrayElimCell_30 v_arrayElimCell_31) .cse159)))))";
		// workaround because the formula with let is too large for this file
		final Term formulaAsTerm = TermParseUtils.parseTerm(mMgdScript.getScript(), formulaAsString);
		final Term formulaWithoutLet = new FormulaUnLet().transform(formulaAsTerm);
		QuantifierEliminationTest.runQuantifierEliminationTest(formulaWithoutLet.toStringDirect(), null, false,
				mServices, mLogger, mMgdScript, mCsvWriter);
	}

	/**
	 * Benchmark from MCR. Quantifier elimination did not terminate.
	 */
//	@Test
	public void mcrPthreadWmm01 () {
		final FunDecl[] funDecls = new FunDecl[] { new FunDecl(SmtSortUtils::getIntSort, "x0", "x1"), };
		final String formulaAsString = "(exists ((v_x1_32 Int) (v_x2_42 Int) (v_x1_28 Int) (v_x2_38 Int) (v_x2_60 Int) (v_x2_54 Int) (v_x1_41 Int) (v_x1_56 Int) (v_x0_46 Int) (v_x0_59 Int) (v_x3_53 Int)) (let ((.cse47 (+ v_x1_56 1)) (.cse4 (<= 0 v_x1_56)) (.cse2 (<= v_x1_56 0)) (.cse5 (<= 0 x1)) (.cse1 (<= x1 0))) (or (let ((.cse0 (<= v_x1_56 x1)) (.cse3 (<= x1 v_x1_56))) (and .cse0 .cse1 .cse2 .cse3 .cse4 .cse5 (let ((.cse23 (<= v_x2_42 v_x2_54)) (.cse52 (+ v_x2_38 1)) (.cse53 (+ v_x2_54 1)) (.cse29 (<= v_x2_42 0))) (let ((.cse22 (<= 0 v_x2_38)) (.cse7 (<= 0 v_x2_54)) (.cse49 (not .cse29)) (.cse48 (<= .cse53 v_x2_42)) (.cse50 (<= .cse52 v_x2_42)) (.cse51 (or (<= v_x2_42 v_x2_38) .cse23)) (.cse6 (<= v_x2_38 0)) (.cse32 (<= v_x2_54 0)) (.cse26 (<= 0 v_x2_42))) (or (let ((.cse8 (<= v_x2_38 v_x2_60)) (.cse9 (ite .cse48 (=> .cse49 (or .cse29 (ite (not .cse50) .cse6 .cse51))) .cse32)) (.cse10 (<= v_x2_60 0)) (.cse36 (<= v_x2_60 v_x2_38))) (and .cse6 .cse7 .cse8 .cse9 .cse1 .cse10 (let ((.cse11 (<= v_x1_41 v_x1_56))) (or (let ((.cse13 (<= v_x1_41 x1)) (.cse14 (<= v_x1_41 0)) (.cse15 (<= 0 v_x1_41)) (.cse12 (<= x1 v_x1_41)) (.cse16 (<= v_x1_56 v_x1_41))) (and .cse11 .cse0 .cse1 .cse3 .cse12 .cse5 (or (and .cse12 .cse13) (ite .cse14 (and (<= (+ v_x1_41 1) 0) .cse15) .cse14)) .cse16 .cse13 (let ((.cse17 (<= 0 v_x0_46))) (or (and (<= (+ v_x0_46 1) 0) .cse17) (let ((.cse33 (<= v_x0_46 0))) (and (let ((.cse44 (<= (+ x0 1) 0))) (let ((.cse18 (not .cse44)) (.cse40 (<= 0 x0))) (ite .cse18 (let ((.cse20 (<= x0 0))) (let ((.cse19 (not .cse20))) (or (ite .cse19 .cse20 (<= 1 x0)) (let ((.cse34 (<= 0 v_x0_59))) (let ((.cse37 (<= v_x0_46 x0)) (.cse42 (<= x0 v_x0_46)) (.cse45 (<= v_x0_46 v_x0_59)) (.cse46 (<= v_x0_59 v_x0_46)) (.cse38 (and (<= (+ v_x0_59 1) 0) .cse34))) (let ((.cse21 (or (and .cse45 .cse46 .cse17 .cse33) .cse38)) (.cse43 (ite .cse19 (or .cse42 .cse20) .cse17)) (.cse41 (ite .cse44 (or .cse37 .cse40) .cse33))) (and .cse21 (or (let ((.cse39 (<= v_x0_59 0))) (and (or (and (let ((.cse30 (+ v_x1_28 1)) (.cse35 (<= 0 v_x1_28))) (or (let ((.cse25 (<= v_x1_32 v_x2_42)) (.cse31 (and (<= (+ v_x1_32 1) 0) (<= 0 v_x1_32)))) (let ((.cse24 (or .cse25 .cse31)) (.cse28 (<= v_x1_28 v_x2_42)) (.cse27 (<= x1 v_x2_42))) (and (<= v_x2_42 v_x1_28) .cse8 .cse22 .cse23 .cse1 (<= 0 v_x2_60) .cse5 .cse24 .cse13 (<= v_x1_28 0) .cse6 .cse11 .cse7 (<= v_x2_42 x1) (or (and .cse25 .cse26 .cse1 .cse27 .cse5 .cse28) (and .cse1 .cse24 .cse5)) .cse27 .cse29 .cse14 .cse9 .cse15 (or (and (<= .cse30 v_x1_32) (<= v_x1_32 v_x1_28)) (and .cse1 .cse5 (<= x1 v_x1_32) (<= v_x1_32 x1)) .cse31) .cse10 .cse12 .cse28 (<= v_x2_54 v_x2_42) (<= v_x0_46 v_x2_54) .cse32 .cse17 .cse33 .cse34 (<= v_x2_42 v_x1_32) .cse26 .cse0 (<= v_x1_41 v_x2_54) .cse2 (<= v_x1_41 v_x2_42) .cse3 .cse4 (<= v_x2_42 v_x1_41) .cse35 .cse36 (or (and .cse1 .cse5) .cse27) .cse16 (<= v_x2_42 v_x1_56)))) (and (<= .cse30 0) .cse35))) .cse37 .cse20 (or .cse38 (and .cse21 .cse34 (or (ite .cse18 (and .cse21 .cse34 .cse39 .cse17) .cse40) .cse38) .cse17)) (<= v_x3_53 0) .cse32 .cse33 .cse17 .cse41 (<= 0 v_x3_53) .cse11 .cse42 .cse7 .cse34 .cse26 .cse39 .cse29 .cse16 .cse40 .cse43 (<= v_x3_53 v_x2_54)) .cse44) .cse34 .cse39 .cse45 .cse46 .cse17 .cse33)) .cse38) (or .cse44 (and .cse42 .cse37 .cse33 .cse17)) .cse43 .cse41 .cse33 .cse17)))) .cse44))) .cse40))) .cse33 .cse17)))))) (and (<= .cse47 v_x1_41) .cse11))) .cse5 .cse36 .cse29 .cse32)) (and (<= .cse52 0) .cse22) (and (<= .cse53 0) .cse7) (ite .cse49 (ite .cse48 (ite .cse50 .cse51 .cse6) .cse32) (and (<= (+ v_x2_42 1) 0) .cse26))))))) (ite .cse2 (and (<= .cse47 0) .cse4) .cse2) (ite .cse1 (and (<= (+ x1 1) 0) .cse5) .cse1))))";
		QuantifierEliminationTest.runQuantifierPusherTest(funDecls, formulaAsString, null, true, mServices, mLogger, mMgdScript, mCsvWriter);
	}

//	@Test
	public void mcrPthreadWmm02 () {
		final FunDecl[] funDecls = new FunDecl[] { new FunDecl(SmtSortUtils::getIntSort, "~x~0", "~x$r_buff0_thd2~0", "~x$w_buff0_used~0", "~x$w_buff1_used~0", "~x$w_buff0~0", "~x$w_buff1~0", "~x$r_buff1_thd0~0"), };
		final String formulaAsString = "(forall ((~x$r_buff1_thd2~0 Int) (|P1Thread1of1ForFork0_#t~nondet35| Int)) (let ((.cse11 (= (mod ~x$r_buff0_thd2~0 256) 0)) (.cse19 (= (mod ~x$w_buff1_used~0 256) 0)) (.cse20 (= (mod ~x$r_buff1_thd2~0 256) 0))) (let ((.cse2 (= (mod ~x$w_buff0_used~0 256) 0)) (.cse21 (not .cse20)) (.cse18 (not .cse19)) (.cse13 (not .cse11))) (let ((.cse22 (or .cse18 .cse13)) (.cse14 (or .cse13 .cse21)) (.cse15 (not .cse2)) (.cse8 (= (mod |P1Thread1of1ForFork0_#t~nondet35| 256) 0))) (let ((.cse7 (not .cse8)) (.cse3 (and .cse11 .cse19)) (.cse4 (and .cse13 .cse15)) (.cse6 (and .cse11 .cse20)) (.cse1 (and .cse22 .cse14 .cse15))) (or (let ((.cse5 (or .cse2 .cse11))) (let ((.cse0 (let ((.cse16 (and .cse5 .cse13 .cse15))) (let ((.cse9 (let ((.cse17 (and .cse8 (or .cse7 (and (or .cse2 .cse16 .cse3 .cse6) .cse22 .cse14 .cse15))))) (and (or .cse7 (and (or (and (or .cse17 .cse4) (or .cse2 .cse11 (and (or .cse7 (and .cse18 (or .cse2 .cse19 .cse20) .cse21 .cse15)) .cse8))) .cse2 .cse3 .cse6) (or .cse17 .cse1))) (or .cse17 .cse8))))) (and (or .cse8 .cse9) (or .cse7 (and (or .cse2 .cse3 (let ((.cse10 (let ((.cse12 (and (or .cse7 (and (or .cse2 .cse16 .cse11 .cse6) .cse13 .cse14 .cse15)) .cse8))) (and (or .cse12 .cse8) (or .cse7 (and (or (and .cse5 (or .cse4 .cse12)) .cse2 .cse11 .cse6) (or .cse12 (and .cse13 .cse14 .cse15)))))))) (and (or .cse10 .cse4) (or .cse2 .cse11 .cse10))) .cse6) (or .cse1 .cse9)))))))) (and (or (and (or .cse0 .cse1) (or .cse2 .cse3 (and (or .cse4 .cse0) .cse5) .cse6)) .cse7) (or .cse0 .cse8)))) (let ((.cse25 (<= ~x$w_buff0~0 0)) (.cse26 (= 0 ~x$w_buff1~0)) (.cse27 (= ~x$r_buff1_thd0~0 0))) (let ((.cse31 (let ((.cse32 (let ((.cse33 (and (= ~x~0 1) .cse25 .cse26 .cse27))) (and (or .cse7 (and (or .cse2 .cse3 (and (or .cse33 .cse4) (or .cse2 .cse11 .cse33)) .cse6) (or .cse33 .cse1))) (or .cse33 .cse8))))) (and (or .cse7 (and (or .cse32 .cse1) (or .cse2 .cse3 (and (or .cse2 .cse11 .cse32) (or .cse4 .cse32)) .cse6))) (or .cse32 .cse8))))) (let ((.cse28 (or .cse31 .cse8))) (and (or .cse2 .cse3 (and (or .cse4 (and (or .cse7 (let ((.cse23 (let ((.cse24 (and .cse25 .cse26 (= ~x$w_buff1~0 1) .cse27))) (and (or .cse24 .cse8) (or (and (or .cse24 .cse1) (or .cse2 .cse3 (and (or .cse4 .cse24) (or .cse2 .cse11 .cse24)) .cse6)) .cse7))))) (and (or (and (or .cse1 .cse23) (or .cse2 .cse3 (and (or .cse2 .cse11 .cse23) (or .cse4 .cse23)) .cse6)) .cse7) (or .cse8 .cse23)))) .cse28)) (or .cse2 .cse11 (and (or .cse7 (let ((.cse29 (let ((.cse30 (and (= ~x$w_buff0~0 1) .cse25 .cse26 .cse27))) (and (or .cse7 (and (or .cse2 .cse3 .cse6 (and (or .cse2 .cse11 .cse30) (or .cse4 .cse30))) (or .cse30 .cse1))) (or .cse30 .cse8))))) (and (or .cse29 .cse8) (or .cse7 (and (or .cse2 .cse3 (and (or .cse2 .cse11 .cse29) (or .cse4 .cse29)) .cse6) (or .cse29 .cse1)))))) .cse28))) .cse6) (or (and (or .cse7 .cse31) .cse28) .cse1)))))))))))";
		QuantifierEliminationTest.runQuantifierPusherTest(funDecls, formulaAsString, null, true, mServices, mLogger, mMgdScript, mCsvWriter);
	}

}
